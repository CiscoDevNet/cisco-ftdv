#  Copyright (c) 2023 Cisco Systems Inc or its affiliates.
#
#  All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: >-
  Deploys MultiAZ, Autoscaling-enabled Cluster solution for Cisco NGFWv instances
Parameters:
  ClusterGrpNamePrefix:
    Description: >-
      This will be Cluster Group Name prefix with suffix as Cluster Number
    Type: String
    MaxLength: 18
    Default: Multi-AzCluster
  ClusterNumber:
    Description: >-
      This will be suffixed to Cluster Group Name(NGFWv-Cluster), if this value is 1 then, group name will be
      NGFWv-Cluster-1, It should be at least 1 numerical digit but not more than 3 digits.
    Type: String
    Default: 1
    AllowedPattern: '^\d{1,3}$'
    ConstraintDescription: must be a numerical string matching '^\d{1,3}$'
  ClusterSize:
    Description: >-
      Total Number of FTDv Nodes in the Cluster (Min 1 and Max 16).
    Type: Number
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
    Default: 3
  NotifyEmailID:
    Description: >-
      Email address to which Cluster Events Email needs to be sent.
      You will receive a subscription confirmation Email.
      Click on "Confirm subscription".
    Type: String
  VpcId:
    Description: >-
      Select VPC for Cluster group
    Type: AWS::EC2::VPC::Id
  VpcIdLBE:
    Description: >-
      Select VPC to deploy Gateway Load Balancer Endpoint.
      - *SKIP this field, if you are NOT deploying Gateway Load Balancer Endpoint.
    Type: String
    Default: "SKIP, if you are NOT deploying Gateway Load Balancer Endpoint."
  LambdaSubnets:
    Description: >-
      Please provide at least 2 subnet for Lambda functions. Note that these 2 subnet should have NAT GW,
      because Lambda functions should communicate with AWS Services which are public DNS.
      Order in which, you select subnet does't matter. Reference https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html
    Type: List<AWS::EC2::Subnet::Id>
  LambdaSG:
    Description: >-
      Provide Security Group for Lambda functions, Keep outbound connections to ANYWHERE.
    Type: List<AWS::EC2::SecurityGroup::Id>
  NoOfAZs:
    Description: >-
      Total Number of Availability Zones into which NGFWv will be deployed (Min 1 and Max 3 depends on Region).
      PLEASE SELECT NoOfAZs = 2 OR 3 ONLY FOR RELEASES 7.6.0 AND ABOVE. FOR LOWER RELEASES, SELECT 1.
    Type: Number
    AllowedValues:
      - 1
      - 2
      - 3
    Default: 3
  AZ:
    Type: CommaDelimitedList
    Description: >-
      Enter the list of Availability Zones to launch NGFWvs(Based on Number of Availability Zones above).
    Default: us-east-1a,us-east-1b,us-east-1c
  DeployGWLBE:
    Description: >-
      Please select "Yes", if you like to deploy Gateway Load Balancer Endpoint.
    Type: String
    AllowedValues:
     - "Yes"
     - "No"
    Default: "No"
  TargetFailover:
    Description: >-
      Enable Target Failover Support ("rebalance" or "no_rebalance").
      'no_rebalance' - Directs existing flows to failed targets and new flows to healthy targets, ensuring backward compatibility.
      'rebalance' - GWLB redistributes existing flows while ensuring new flows go to healthy targets.
    Type: String
    AllowedValues:
     - "rebalance"
     - "no_rebalance"
    Default: "no_rebalance"
  S3BktName:
    Description: The S3 Bucket which contains uploaded Lambda zip files. Please specify correct bucket name
    Type: String
    AllowedPattern: '(?=^.{3,63}$)(?!^(\d+\.)+\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)'
    ConstraintDescription: must be a valid S3 bucket name
    Default: multi-azinfra-s3bucketcluster-rsx6170089ez
  TgHealthPort:
    Description: >-
      *SKIP this field, if you are NOT using Gateway Load Balancer.
      - Note By default this port shouldn't be used for traffic.
    Type: String
    AllowedPattern: '^()([1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])$'
    ConstraintDescription: must be a valid TCP port
    Default: 8080
  AssignPublicIP:
    Description: >-
      Please select true if NGFWvs need to have public IP address. In case NGFWv needs to have public IP then management
      subnet should have AWS IGW as route to internet.
    Type: String
    AllowedValues:
      - true
      - false
    Default: true
  GWLBESubnetId:
    Description: >-
      Enter only one subnet ID.
      - *SKIP this field, if you are NOT deploying Gateway Load Balancer Endpoint.
      Wrong Subnet selection will cause problems.
      Make sure that Subnet belongs to correct VPC and belongs to the AZs specified above.
    Type: String
    Default: "SKIP, if you are NOT deploying Gateway Load Balancer Endpoint."
  MgmtInterfaceSG:
    Description: >-
      Please select security group ID for NGFWv instances
    Type: List<AWS::EC2::SecurityGroup::Id>
  MgmtSubnetIds:
    Description: >-
      Select only one subnet per AZ. If multiple subnets from same AZ are chosen, wrong Subnet selection will cause problems while deploying the NGFWv instances.
      Make sure of adding Subnet from AZ provided.
    Type: List<AWS::EC2::Subnet::Id>
  InsideInterfaceSG:
    Description: >-
      Please select security group ID for NGFWv instances inside interface
    Type: AWS::EC2::SecurityGroup::Id
  InsideSubnetIds:
    Description: >-
      Select only one subnet per AZ. If multiple subnets from same AZ are chosen,
      wrong Subnet selection will cause problems while deploying the NGFWv instances.
      Make sure of adding Subnet from AZ provided.
    Type: List<AWS::EC2::Subnet::Id>
  CCLInterfaceSG:
    Description: >-
      Please select security group ID for NGFWv instances CCL interface
    Type: AWS::EC2::SecurityGroup::Id
  CCLSubnetIds:
    Description: >-
      Select only one subnet per AZ. If multiple subnet from same AZ are chosen,
      wrong Subnet selection will cause problems while deploying the NGFWv instances.
      Make sure of adding Subnet from AZ provided.
    Type: List<AWS::EC2::Subnet::Id>
  CCLSubnetRanges:
    Description: >-
      Enter IP ranges of CCL subnets for different AZs.
      Exclude first 4 reserved IPs.
      IP pool for Cluster Control Link (CCL).
      IP will be allocated to NGFWVs' CCL interfaces from CCL IP Pool.
    Type: CommaDelimitedList
    ConstraintDescription: must be a valid IP address
    Default: 10.5.90.4 10.5.90.30,10.5.91.4 10.5.91.30,10.5.92.4 10.5.92.30
  InstanceType:
    Description: >-
      Cisco NGFWv EC2 instance type.
      Make sure that AWS Region supports selected instance type.
    Type: String
    AllowedValues:
      - m5n.xlarge
      - m5n.2xlarge
      - m5n.4xlarge
      - m5zn.xlarge
      - m5zn.2xlarge
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5d.xlarge
      - c5d.2xlarge
      - c5d.4xlarge
      - c5a.xlarge
      - c5a.2xlarge
      - c5a.4xlarge
      - c5ad.xlarge
      - c5ad.2xlarge
      - c5ad.4xlarge
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
    Default: c5.xlarge
  LicenseType:
    Description: >-
      Choose Cisco NGFWv EC2 instance license type, make sure AMI ID which will be entered below is of same licensing type.
    Type: String
    AllowedValues:
      - BYOL
      - PAYG
    Default: BYOL
  AmiID:
    Description: >-
      Please choose correct AMI ID as per the region, desired version and license type(BYOL/PAYG).
      NGFWv version 7.2 onwards support clustering, version 7.6 onwards supports the multi-AZ enhancements 
    Type: AWS::EC2::Image::Id
    Default: ami-09963e452646cef87
  InstanceMetadataServiceVersion:
    Description: Select IMDS version to be used by the instances
    Type: String
    Default: "V1 and V2 (token optional)"
    AllowedValues:
      - "V1 and V2 (token optional)"
      - "V2 only (token required) [IMDSv2 ONLY APPLICABLE FOR VERSION 7.6 AND ABOVE]"
  KmsArn:
    Description: >-
      [Conditional] ARN of an existing KMS (AWS KMS key to encrypt at rest), If specified, NGFWv 'admin' Password below should be encrypted
      Password. The Password encryption should be done only using the specified ARN.
      Generating Encrypted Password Ex: " aws kms encrypt --key-id <KMS ARN> --plaintext <password> ", Please use such generated password in below fields.
    Type: String
  ngfwPassword:
    Description: >-
      All NGFWv instances come up with default password, which is in Userdata field of Launch Template(Cluster Group).
      Password will be changed to given(below) password once NGFWv is accessible.
      Since this can be a plain text password or KMS encrypted password, minimum length should be 8 characters.
    NoEcho: true
    MinLength: 8
    Type: String
    ConstraintDescription: password must be of minimum 8 characters
    Default: c0mpleX@1209
  fmcServer:
    Description: This IP can be external IP or IP reachable in NGFWv mgmt subnet in the VPC
    Type: String
    MinLength: 7
    MaxLength: 15
    AllowedPattern: '^(?:(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(\.(?!$)|$)){4}$'
    ConstraintDescription: must be a valid IP address
    Default: 44.195.48.182
  fmcOperationsUsername:
    Description: >-
      Unique Internal user for Cluster Manager automation tasks on FMC,
        User should have 'Administrator' Role.
        Refer 'Firepower Management Center Configuration Guide'
    Type: String
    Default: fmcapi
  fmcOperationsPassword:
    Description: >-
      Please make sure you type correct password (Wrong password will result in failure in automation).
      If KMS ARN is specified above, please provide encrypted password.
    NoEcho: true
    Type: String
    Default: c0mpleX@1209
  fmcDeviceGrpName:
    Description: >-
      Enter unique name for Cluster Group in FMC
    Type: String
    Default: ftdv-cluster
  fmcPublishMetrics:
    Description: >-
      Please select true if you would like to create a Lambda Function to poll FMC,
      and publish a specific Device Group Metrics to AWS CloudWatch.
    Type: String
    AllowedValues:
      - true
      - false
    Default: true
  fmcMetricsUsername:
    Description: >-
      Unique Internal user for Polling Memory Metrics from FMC,
        User should have roles system provided 'Network Admin' and 'Maintenance User' or more.
        Refer 'Firepower Management Center Configuration Guide'
    Type: String
    Default: fmcmetricuser
  fmcMetricsPassword:
    Description: >-
      Please make sure you type correct password (Wrong password will result in failure of Metrics collection).
      If KMS ARN is specified above, please provide encrypted password.
    NoEcho: true
    Type: String
    Default: c0mpleX@1209
  CpuThresholds:
    Description: >-
      [Optional] Specifying non-zero lower and upper threshold will create respective Scale policies.
      If 0,0 is selected, no cpu scaling alarm or policies will be created.
      Evaluation points & Data points are kept default/recommended values
    Type: CommaDelimitedList
    Default: 10,70
    AllowedValues:
      - 0,0
      - 0,90
      - 0,80
      - 0,70
      - 0,60
      - 0,50
      - 0,40
      - 0,30
      - 0,20
      - 0,10
      - 5,90
      - 5,70
      - 5,50
      - 5,30
      - 5,15
      - 10,90
      - 10,80
      - 10,70
      - 10,60
      - 10,50
      - 10,40
      - 10,30
      - 10,20
      - 10,0
      - 20,90
      - 20,80
      - 20,70
      - 20,60
      - 20,50
      - 20,30
      - 20,0
      - 30,90
      - 30,80
      - 30,70
      - 30,60
      - 30,50
      - 30,40
      - 30,0
      - 40,90
      - 40,80
      - 40,70
      - 40,60
      - 40,50
      - 40,0
      - 50,90
      - 50,80
      - 50,70
      - 50,60
      - 50,0
      - 60,90
      - 60,80
      - 60,70
      - 60,0
      - 70,90
      - 70,80
      - 70,0
      - 80,95
      - 80,90
      - 80,0
      - 90,95
      - 90,0
  MemoryThresholds:
    Description: >-
      [Optional] Specifying non-zero lower and upper threshold will create respective Scale policies.
      If 0,0 is selected, no memory scaling alarm or policies will be created. Note, if Metric publish Lambda is not
      created then this input will be ignored irrespective of chosen values.
    Type: CommaDelimitedList
    Default: 40,70
    AllowedValues:
      - 0,0
      - 0,90
      - 0,80
      - 0,70
      - 0,60
      - 0,50
      - 0,40
      - 0,30
      - 0,20
      - 0,10
      - 5,90
      - 5,70
      - 5,50
      - 5,30
      - 5,15
      - 10,90
      - 10,80
      - 10,70
      - 10,60
      - 10,50
      - 10,40
      - 10,30
      - 10,20
      - 10,0
      - 20,90
      - 20,80
      - 20,70
      - 20,60
      - 20,50
      - 20,30
      - 20,0
      - 30,90
      - 30,80
      - 30,70
      - 30,60
      - 30,50
      - 30,40
      - 30,0
      - 40,90
      - 40,80
      - 40,70
      - 40,60
      - 40,50
      - 40,0
      - 50,90
      - 50,80
      - 50,70
      - 50,60
      - 50,0
      - 60,90
      - 60,80
      - 60,70
      - 60,0
      - 70,90
      - 70,80
      - 70,0
      - 80,95
      - 80,90
      - 80,0
      - 90,95
      - 90,0

Conditions:
  support1zone: !Equals
    - !Ref NoOfAZs
    - 1
  support2zone: !Equals
    - !Ref NoOfAZs
    - 2
  support3zone: !Equals
    - !Ref NoOfAZs
    - 3
  UserNotifyEmail: !Not
    - !Equals
      - ''
      - !Ref NotifyEmailID
  ShouldEncrypt: !Not
    - !Equals
      - ''
      - !Ref KmsArn
  addGWLBE: !Not
    - !Equals
      - "No"
      - !Ref DeployGWLBE
  EnableIMDSv2:
    Fn::Equals:
      - !Ref InstanceMetadataServiceVersion
      - "V2 only (token required) [IMDSv2 ONLY APPLICABLE FOR VERSION 7.6 AND ABOVE]"
  PublishMetrics: !Equals
    - !Ref fmcPublishMetrics
    - true
  DoCpuUpPolcy: !Not
    - !Equals
      - 0
      - !Select ['1', !Ref CpuThresholds ]
  DoCpuLowPolcy: !Not
    - !Equals
      - 0
      - !Select ['0', !Ref CpuThresholds ]
  DoMemUpPolcy: !And
    - !Condition PublishMetrics
    - !Not
      - !Equals
        - 0
        - !Select ['1', !Ref MemoryThresholds ]
  DoMemLowPolcy: !And
    - !Condition PublishMetrics
    - !Not
      - !Equals
        - 0
        - !Select ['0', !Ref MemoryThresholds ]

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Cluster Configuration
        Parameters:
          - ClusterGrpNamePrefix
          - ClusterNumber
          - ClusterSize
      - Label:
          default: Infrastructure Details
        Parameters:
          - NoOfAZs
          - AZ
          - NotifyEmailID
          - S3BktName
          - VpcId
          - MgmtSubnetIds
          - InsideSubnetIds
          - LambdaSubnets
          - CCLSubnetIds
          - CCLSubnetRanges
          - MgmtInterfaceSG
          - InsideInterfaceSG
          - LambdaSG
          - CCLInterfaceSG
      - Label:
          default: GWLB Configuration
        Parameters:
          - DeployGWLBE
          - VpcIdLBE
          - GWLBESubnetId
          - TargetFailover
          - TgHealthPort
      - Label:
          default: Cisco NGFWv Instance Configuration
        Parameters:
          - InstanceType
          - LicenseType
          - AssignPublicIP
          - AmiID
          - KmsArn
          - ngfwPassword
          - InstanceMetadataServiceVersion
      - Label:
          default: FMC Automation Configuration
        Parameters:
          - fmcServer
          - fmcOperationsUsername
          - fmcOperationsPassword
          - fmcDeviceGrpName
      - Label:
          default: FMC Device Group Metrics Publish Configuration
        Parameters:
          - fmcPublishMetrics
          - fmcMetricsUsername
          - fmcMetricsPassword
      - Label:
          default: Scaling Configuration
        Parameters:
          - CpuThresholds
          - MemoryThresholds
    ParameterLabels:
      ClusterGrpNamePrefix:
        default: Cluster Group Name Prefix
      NotifyEmailID:
        default: Cluster Email Notification
      ClusterNumber:
        default: Cluster Number
      ClusterSize:
        default: Cluster Size
      VpcId:
        default: VPC ID
      VpcIdLBE:
        default: VPC ID for Gateway Load Balancer Endpoint
      DeployGWLBE:
        default: Deploy Gateway Load Balancer Endpoint
      TargetFailover:
        default: Target Failover
      LambdaSubnets:
        default: Subnets for Lambda Functions
      LambdaSG:
        default: Security Groups for Lambda Functions
      NoOfAZs:
        default: Number of Availibility Zones
      AZ:
        default: Enter Valid Availability Zones for launching NGFWvs
      S3BktName:
        default: S3 Bucket Name
      TgHealthPort:
        default: Enter Health Check Port for Gateway Load Balancer
      InstanceType:
        default: NGFWv Instance type
      LicenseType:
        default: NGFWv Instance License type
      AmiID:
        default: NGFWv AMI-ID
      AssignPublicIP:
        default: Assign Public IP for NGFWv from AWS IP Pool
      GWLBESubnetId:
        default: Subnet ID for Gateway Load Balancer Endpoint
      MgmtInterfaceSG:
        default: Security Group for NGFWv Instance
      MgmtSubnetIds:
        default: Subnet for NGFWv Management Interfaces of different AZs
      InsideInterfaceSG:
        default: Security Group for NGFWv Instance inside
      InsideSubnetIds:
        default: Subnet for NGFWv Inside Interface of different AZs
      CCLInterfaceSG:
        default: Security Group for NGFWv CCL
      CCLSubnetIds:
        default: Subnet for NGFWv CCL Interface of different AZs
      CCLSubnetRanges:
        default: Ranges for CCL Subnets of different AZs (CCL IP Pools)
      KmsArn:
        default: KMS Master Key ARN
      ngfwPassword:
        default: NGFWv Password
      fmcServer:
        default: FMC host IP address
      fmcOperationsUsername:
        default: FMC Username for Cluster Automation
      fmcOperationsPassword:
        default: FMC Password for Cluster Automation
      fmcDeviceGrpName:
        default: FMC Device Group Name
      fmcPublishMetrics:
        default: Publish Custom Metrics from FMC
      fmcMetricsUsername:
        default: FMC Username for Publishing Metrics to CloudWatch
      fmcMetricsPassword:
        default: FMC Password for Publishing Metrics to CloudWatch
      CpuThresholds:
        default: Lower,Upper CPU Thresholds
      MemoryThresholds:
        default: Lower,Upper Memory Thresholds
      InstanceMetadataServiceVersion:
        default: Instance Metadata Service Version  
Resources:
# Lambda Layer ---------------------------------------------------------
  LambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.9
      Content:
        S3Bucket: !Ref S3BktName
        S3Key: cluster_layer.zip
      Description: Lambda Layer for Cisco NGFWv Cluster Solution
      LayerName: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber, 'lambda-layer' ] ]
# ------------------------------------------------------------------------
# Lambda Role & Policy
# ------------------------------------------------------------------------
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber, 'Role' ] ]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
  LambdaPolicy:
    DependsOn:
      - LambdaRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber, 'Policy' ] ]
      Roles:
        - !Ref LambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - logs:*
              - ec2:*
              - elasticloadbalancing:*
              - autoscaling:*
              - events:*
              - s3:*
              - cloudwatch:*
              - cloudwatch:SetAlarmState
              - cloudwatch:PutMetricData
              - sns:*
              - ssm:*
              - lambda:*
              - kms:Decrypt
            Effect: Allow
            Resource: '*'
# ------------------------------------------------------------------------
# User Notification SNS
# ------------------------------------------------------------------------
  UserNotifyTopic:
    Condition: UserNotifyEmail
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber, 'UserNotifyTopic']]
  UserNotifyTopicSubscription:
    Condition: UserNotifyEmail
    DependsOn: UserNotifyTopic
    DeletionPolicy: Delete
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref NotifyEmailID
      Protocol: email
      TopicArn: !Ref UserNotifyTopic
# ------------------------------------------------------------------------
# GW Load Balancer & Target groups
# ------------------------------------------------------------------------
  gwlb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber, 'GWLB' ] ]
      Type: gateway
      Subnets: !Ref InsideSubnetIds
      LoadBalancerAttributes: 
        - Key: load_balancing.cross_zone.enabled
          Value: true
  tg:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn:
      - gwlb
    Properties:
      Name: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber, 'GWLB-tg' ] ]
      Port: 6081
      Protocol: GENEVE
      HealthCheckPort: !Ref TgHealthPort
      HealthCheckIntervalSeconds: 5
      HealthCheckTimeoutSeconds: 2
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckProtocol: TCP
      VpcId: !Ref VpcId
      TargetType: ip
      TargetGroupAttributes:
      - Key: target_failover.on_deregistration
        Value: !Ref TargetFailover
      - Key: target_failover.on_unhealthy
        Value: !Ref TargetFailover
  listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref tg
      LoadBalancerArn: !Ref gwlb

# ------------------------------------------------------------------------
# Create Lambda Custom Resource to retrieve VPC Endpoint Service Name:
# ------------------------------------------------------------------------
  VpceServiceLambdaExecutionRole:
    Condition: addGWLBE
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - ec2:DescribeVpcEndpointServiceConfigurations
                  - ec2:DescribeVpcEndpointServicePermissions
                  - ec2:DescribeVpcEndpointServices
                Resource: "*"

  # Lambda creates CloudWatch Log Group.
  # Since CF stack didn't explicitly create the Log Group, Log Group doesn't get deleted when stack is deleted.
  # Hence creating Log Group though the stack for Lambda specific funciton.
  # Their are few things to consider. For more details refer to: https://github.com/aws/serverless-application-model/issues/1216
  VpceServiceLogGroup:
    Condition: addGWLBE
    Type: AWS::Logs::LogGroup
    Properties:
        LogGroupName: !Sub /aws/lambda/${AWS::StackName}-vpce-service
        RetentionInDays: 1

  VpceServiceName:
    Condition: addGWLBE
    Type: AWS::Lambda::Function
    DependsOn: VpceServiceLogGroup
    Properties:
      FunctionName: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber, 'vpce-service'] ]
      Handler: "index.handler"
      Role: !GetAtt VpceServiceLambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import json
          import logging
          import time
          import boto3
          import cfnresponse
          from botocore.exceptions import ClientError
          try:
              ec2 = boto3.client('ec2')
          except ClientError as e:
              logger.error(f"ERROR: failed to connect to EC2 client: {e}")
              sys.exit(1)
          def handler(event, context):
              logger = logging.getLogger()
              logger.setLevel(logging.INFO)
              logger.info('Received event: {}'.format(json.dumps(event)))
              responseData = {}
              responseStatus = cfnresponse.FAILED
              try:
                  serviceid = event["ResourceProperties"]["VpceServiceId"]
              except Exception as e:
                  logger.info('Attribute retrival failure: {}'.format(e))
              try:
                  if event["RequestType"] == "Delete":
                      responseStatus = cfnresponse.SUCCESS
                      cfnresponse.send(event, context, responseStatus, responseData)
              except Exception:
                  logger.exception("Signaling failure to CloudFormation.")
                  cfnresponse.send(event, context, cfnresponse.FAILED, {})
              if event["RequestType"] == "Create":
                  logger.info("Retrieving VPC Endpoint Service Name:")
                  try:
                      response = ec2.describe_vpc_endpoint_service_configurations(
                          Filters=[
                              {
                                  'Name': 'service-id',
                                  'Values': [serviceid]
                              }
                          ]
                      )
                  except Exception as e:
                      logger.info('ec2.describe_vpc_endpoint_service_configurations failure: {}'.format(e))
                  service_name = response['ServiceConfigurations'][0]['ServiceName']
                  time.sleep(120)
                  responseData['ServiceName'] = service_name
                  responseStatus = cfnresponse.SUCCESS
                  cfnresponse.send(event, context, responseStatus, responseData)
      Runtime: python3.9
      Timeout: 150

  RetrieveVpceServiceName:
    Condition: addGWLBE
    Type: Custom::RetrieveAttributes
    Properties:
      ServiceToken: !GetAtt VpceServiceName.Arn
      VpceServiceId: !Ref VpcEndpointService

# ------------------------------------------------------------------------
# Create VPC Endpoint Service
# ------------------------------------------------------------------------
  VpcEndpointService:
    Condition: addGWLBE
    Type: AWS::EC2::VPCEndpointService
    Properties:
      GatewayLoadBalancerArns: 
        - !Ref gwlb
      AcceptanceRequired: false

# ------------------------------------------------------------------------
# Create Gateway Load Balancer Endpoint
# ------------------------------------------------------------------------
  GwlbEndpoint:
    Condition: addGWLBE
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcIdLBE
      ServiceName: !GetAtt RetrieveVpceServiceName.ServiceName
      VpcEndpointType: GatewayLoadBalancer
      SubnetIds:
        - !Ref GWLBESubnetId
# ------------------------------------------------------------------------
# Cluster Manager Lambda
# ------------------------------------------------------------------------
  ClusterManager:
   Type: AWS::Serverless::Function
   DependsOn:
     - LambdaRole
     - LambdaPolicy
     - CLSmanagerTopic
   DeletionPolicy: Delete
   Properties:
     FunctionName: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber, 'manager-lambda'] ]
     Handler: manager.lambda_handler
     Runtime: python3.9
     ReservedConcurrentExecutions: 1
     CodeUri:
       Bucket: !Ref S3BktName
       Key: cluster_manager.zip
     Description: 'ClusterManager Lambda is responsible to configure NGFWv'
     MemorySize: 128
     Timeout: 900
     VpcConfig:
       SecurityGroupIds: !Ref LambdaSG
       SubnetIds: !Ref LambdaSubnets
     KmsKeyArn: !Ref KmsArn
     Environment:
       Variables:
         DEBUG_LOGS: 'enable'
         KMS_ENC: !If
           - ShouldEncrypt
           - !Ref KmsArn
           - !Ref 'AWS::NoValue'
         ASG_NAME: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber ] ]
         FMC_DEVICE_GRP: !Ref fmcDeviceGrpName
         FMC_SERVER: !Ref fmcServer
         FMC_USERNAME: !Ref fmcOperationsUsername
         FMC_PASSWORD: !Ref fmcOperationsPassword
         NO_OF_AZs: !Ref NoOfAZs
         FTD_LICENSE_TYPE: !Ref LicenseType
         GWLB_ARN: !Ref gwlb
         FTD_PASSWORD: !Ref ngfwPassword
         TG_HEALTH_PORT: !Ref TgHealthPort
         CLS_MANAGER_TOPIC: !Ref CLSmanagerTopic
         USER_NOTIFY_TOPIC_ARN: !If
           - UserNotifyEmail
           - !Ref UserNotifyTopic
           - !Ref 'AWS::NoValue'
     Role: !GetAtt LambdaRole.Arn
     Layers:
       - !Ref LambdaLayer
     Events:
       SNS1:
         Type: SNS
         Properties:
           Topic:
             Ref: CLSmanagerTopic
  ClusterManagerLogGrp:
   DependsOn: ClusterManager
   Type: AWS::Logs::LogGroup
   DeletionPolicy: Delete
   Properties:
     LogGroupName: !Join ['/', ['/aws/lambda', !Ref ClusterManager]]
  InstanceEvent:
   Type: AWS::Events::Rule
   Properties:
     Name: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber, 'notify-instance-event'] ]
     EventPattern:
       source:
         - aws.autoscaling
       detail-type:
         - EC2 Instance Launch Successful
         - EC2 Instance Terminate Successful
       detail:
         AutoScalingGroupName:
           - !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber ] ]
     Targets:
       - Id: CloudWatchEventTarget
         Arn: !GetAtt ClusterManager.Arn
     State: ENABLED
  InstanceEventInvokeLambdaPermission:
   Type: AWS::Lambda::Permission
   DependsOn: InstanceEvent
   Properties:
     FunctionName: !Ref ClusterManager
     Action: 'lambda:InvokeFunction'
     Principal: events.amazonaws.com
     SourceArn: !GetAtt InstanceEvent.Arn
  CLSmanagerTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber , 'cluster-manager-topic'] ]
# ------------------------------------------------------------------------
# Lifecycle Action Lambda
# ------------------------------------------------------------------------
  LifeCycleLambda:
    Type: AWS::Serverless::Function
    DependsOn:
      - LambdaRole
      - LambdaPolicy
      - CLSmanagerTopic
    DeletionPolicy: Delete
    Properties:
      FunctionName: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber, 'lifecycle-lambda'] ]
      Handler: lifecycle_ftdv.lambda_handler
      Runtime: python3.9
      CodeUri:
        Bucket: !Ref S3BktName
        Key: cluster_lifecycle.zip
      Description: 'Life Cycle Lambda is responsible to attach interfaces to new NGFWv'
      MemorySize: 128
      ReservedConcurrentExecutions: 16
      Timeout: 300
      Role: !GetAtt LambdaRole.Arn
      VpcConfig:
        SecurityGroupIds: !Ref LambdaSG
        SubnetIds: !Ref LambdaSubnets
      Layers:
        - !Ref LambdaLayer
      Environment:
        Variables:
          DEBUG_LOGS: 'enable'
          ASG_NAME: !Join [ '-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber]]
          FMC_DEVICE_GRP: !Ref fmcDeviceGrpName
          NO_OF_AZs: !Ref NoOfAZs
          FTD_LICENSE_TYPE: !Ref LicenseType
          INSIDE_SUBNET: !If
              - support2zone
              - !Join ['::', [ !Select ['0', !Ref InsideSubnetIds ], !Select ['1', !Ref InsideSubnetIds ] ] ]
              - !If
                - support3zone
                - !Join ['::', [ !Select ['0', !Ref InsideSubnetIds ], !Select ['1', !Ref InsideSubnetIds ], !Select ['2', !Ref InsideSubnetIds ] ] ]
                - !Select ['0', !Ref InsideSubnetIds ]
          SECURITY_GRP_2: !Ref InsideInterfaceSG
          CCL_SUBNET: !If
              - support2zone
              - !Join ['::', [ !Select ['0', !Ref CCLSubnetIds ], !Select ['1', !Ref CCLSubnetIds ] ] ]
              - !If
                - support3zone
                - !Join ['::', [ !Select ['0', !Ref CCLSubnetIds ], !Select ['1', !Ref CCLSubnetIds ], !Select ['2', !Ref CCLSubnetIds ] ] ]
                - !Select ['0', !Ref CCLSubnetIds ]
          SECURITY_GRP_3: !Ref CCLInterfaceSG      
          GWLB_ARN: !Ref gwlb
          LB_DEREGISTRATION_DELAY: 180
          USER_NOTIFY_TOPIC_ARN: !If
            - UserNotifyEmail
            - !Ref UserNotifyTopic
            - !Ref 'AWS::NoValue'
  LifeCycleLambdaLogGrp:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Join ['/', ['/aws/lambda', !Ref LifeCycleLambda]]
  LifeCycleEvent:
    Type: AWS::Events::Rule
    Properties:
      Name: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber, 'lifecycle-action' ] ]
      EventPattern:
        source:
          - aws.autoscaling
        detail-type:
          - EC2 Instance-launch Lifecycle Action
          - EC2 Instance-terminate Lifecycle Action
        detail:
          AutoScalingGroupName:
            - !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber ] ]
      Targets:
        - Id: CloudWatchEventTarget
          Arn: !GetAtt LifeCycleLambda.Arn
      State: ENABLED
  LifeCycleEventInvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    DependsOn: LifeCycleEvent
    Properties:
      FunctionName: !Ref LifeCycleLambda
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt LifeCycleEvent.Arn

# ------------------------------------------------------------------------
# Custom Metric Publishing
# ------------------------------------------------------------------------
  CustomMetricsPublisher:
    Type: AWS::Serverless::Function
    Condition: PublishMetrics
    DependsOn:
      - LambdaRole
      - LambdaPolicy
    DeletionPolicy: Delete
    Properties:
      FunctionName: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber, 'custom-metrics-publisher-lambda'] ]
      Handler: custom_metrics_publisher.lambda_handler
      Runtime: python3.9
      CodeUri:
        Bucket: !Ref S3BktName
        Key: custom_metrics_publisher.zip
      Description: 'Custom Metric Publisher Lambda is responsible to periodically publish metrics (CPU/Memory) to CloudWatch'
      MemorySize: 128
      ReservedConcurrentExecutions: 10
      Timeout: 300
      Role: !GetAtt LambdaRole.Arn
      VpcConfig:
        SecurityGroupIds: !Ref LambdaSG
        SubnetIds: !Ref LambdaSubnets
      KmsKeyArn: !Ref KmsArn
      Layers:
        - !Ref LambdaLayer
      Environment:
        Variables:
         DEBUG_LOGS: 'enable'
         KMS_ENC: !If
           - ShouldEncrypt
           - !Ref KmsArn
           - !Ref 'AWS::NoValue'
         ASG_NAME: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber ] ]
         FMC_DEVICE_GRP: !Ref fmcDeviceGrpName
         FMC_SERVER: !Ref fmcServer
         FMC_MET_USERNAME: !Ref fmcMetricsUsername
         FMC_MET_PASSWORD: !Ref fmcMetricsPassword
         CRON_JOB_NAME: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber, 'metric-pub-cron' ] ]
  CustomMetricsPublisherLogGrp:
    Condition: PublishMetrics
    DependsOn: CustomMetricsPublisher
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Join ['/', ['/aws/lambda', !Ref CustomMetricsPublisher]]
  CloudWatchCron1:
    Condition: PublishMetrics
    Type: AWS::Events::Rule
    Properties:
      Name: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber, 'metric-pub-cron' ] ]
      #ScheduleExpression: !Join ['rate','(',[!Ref Rate],' minutes)'  ]    ]
      #ScheduleExpression: !Ref Rate
      ScheduleExpression: !Sub
        - rate(${Time} minutes)
        - Time: 2
      Targets:
        - Id: CloudWatchEventTarget
          Arn: !GetAtt CustomMetricsPublisher.Arn
      State: ENABLED
  CloudWatchCron1InvokeLambdaPermission:
    Condition: PublishMetrics
    Type: AWS::Lambda::Permission
    DependsOn: CloudWatchCron1
    Properties:
      FunctionName: !Ref CustomMetricsPublisher
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt CloudWatchCron1.Arn
  InstanceLaunchEvent:
    Condition: PublishMetrics
    Type: AWS::Events::Rule
    Properties:
      Name: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber, 'notify-vmlaunch-publisher'] ]
      EventPattern:
        source:
         - aws.autoscaling
        detail-type:
         - EC2 Instance Launch Successful
        detail:
         AutoScalingGroupName:
           - !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber ] ]
      Targets:
       - Id: CloudWatchEventTarget
         Arn: !GetAtt CustomMetricsPublisher.Arn
      State: ENABLED
  InstanceLaunchEventInvkPerm:
    Condition: PublishMetrics
    Type: AWS::Lambda::Permission
    DependsOn: InstanceLaunchEvent
    Properties:
      FunctionName: !Ref CustomMetricsPublisher
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt InstanceLaunchEvent.Arn
# ------------------------------------------------------------------------
# AWS provided Dynamic Scaling
# ------------------------------------------------------------------------
  ScaleOutCPUpolicy:
    Condition: DoCpuUpPolcy
    DependsOn:
      - FTDvGroup
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref FTDvGroup
      PolicyType: SimpleScaling
      ScalingAdjustment: 1
  ScaleInCPUpolicy:
    Condition: DoCpuLowPolcy
    DependsOn:
      - FTDvGroup
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref FTDvGroup
      PolicyType: SimpleScaling
      ScalingAdjustment: -1
  ScaleOutMempolicy:
    Condition: DoMemUpPolcy
    DependsOn:
      - FTDvGroup
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref FTDvGroup
      PolicyType: SimpleScaling
      ScalingAdjustment: 1
  ScaleInMempolicy:
    Condition: DoMemLowPolcy
    DependsOn:
      - FTDvGroup
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref FTDvGroup
      PolicyType: SimpleScaling
      ScalingAdjustment: -1
# ------------------------------------------------------------------------
# Scaling Alarm & Notification
# ------------------------------------------------------------------------
  CPUUpperboundAlarm1:
    Condition: DoCpuUpPolcy
    DependsOn:
      - FTDvGroup
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join ['', [!Ref ClusterGrpNamePrefix, '-',!Ref ClusterNumber, 'Cpu-up-threshold' ] ]
      ActionsEnabled: true
      Namespace: AWS/EC2
      AlarmActions:
        - !Ref ScaleOutCPUpolicy
      AlarmDescription: Alarm when CPU usage hits upper threshold
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 5
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref FTDvGroup
      EvaluationPeriods: 5
      MetricName: CPUUtilization
      Threshold: !Select ['1', !Ref CpuThresholds ]
      Period: 60
      Statistic: Average
      Unit: Percent
      TreatMissingData: notBreaching
  CPULowerboundAlarm1:
    Condition: DoCpuLowPolcy
    DependsOn:
      - FTDvGroup
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join ['', [!Ref ClusterGrpNamePrefix, '-',!Ref ClusterNumber, 'Cpu-low-threshold' ] ]
      ActionsEnabled: true
      Namespace: AWS/EC2
      AlarmActions:
        - !Ref ScaleInCPUpolicy
      AlarmDescription: Alarm when CPU usage hits lower threshold
      ComparisonOperator: LessThanThreshold
      DatapointsToAlarm: 10
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref FTDvGroup
      EvaluationPeriods: 10
      MetricName: CPUUtilization
      Threshold: !Select ['0', !Ref CpuThresholds ]
      Period: 60
      Statistic: Average
      Unit: Percent
      TreatMissingData: notBreaching
  MemoryUpperboundAlarm1:
    Condition: DoMemUpPolcy
    DependsOn:
      - FTDvGroup
      - CustomMetricsPublisher
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join ['', [!Ref ClusterGrpNamePrefix, '-',!Ref ClusterNumber, 'Memory-up-threshold' ] ]
      ActionsEnabled: true
      Namespace: Cisco-NGFWv-Cluster-Group
      AlarmActions:
        - !Ref ScaleOutMempolicy
      AlarmDescription: Alarm when Memory usage hits upper threshold
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 4
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref FTDvGroup 
        - Name: fmcDeviceGroupName
          Value: !Ref fmcDeviceGrpName
      EvaluationPeriods: 4
      MetricName: GroupAvgMem
      Threshold: !Select ['1', !Ref MemoryThresholds ]
      Period: 120
      Statistic: Average
      Unit: Percent
      TreatMissingData: notBreaching
  MemoryLowerboundAlarm1:
    Condition: DoMemLowPolcy
    DependsOn:
      - FTDvGroup
      - CustomMetricsPublisher
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join ['', [!Ref ClusterGrpNamePrefix, '-',!Ref ClusterNumber, 'Memory-low-threshold' ] ]
      ActionsEnabled: true
      Namespace: Cisco-NGFWv-Cluster-Group
      AlarmActions:
        - !Ref ScaleInMempolicy
      AlarmDescription: Alarm when Memory usage hits lower threshold
      ComparisonOperator: LessThanThreshold
      DatapointsToAlarm: 5
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref FTDvGroup
        - Name: fmcDeviceGroupName
          Value: !Ref fmcDeviceGrpName
      EvaluationPeriods: 5
      MetricName: GroupAvgMem
      Threshold: !Select ['0', !Ref MemoryThresholds ]
      Period: 120
      Statistic: Average
      Unit: Percent
      TreatMissingData: notBreaching
# ------------------------------------------------------------------------
# Cluster Group & Launch Template
# ------------------------------------------------------------------------
  FTDvGroup:
    DependsOn:
      - LifeCycleEvent
      - InstanceEvent
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber ] ]
      VPCZoneIdentifier: !If
        - support1zone
        - !Split
          - ':'
          - !Select ['0', !Ref MgmtSubnetIds ]
        - !If
          - support2zone
          - !Split
            - ':'
            - !Join [':', [ !Select ['0', !Ref MgmtSubnetIds ], !Select ['1', !Ref MgmtSubnetIds ] ] ]
          - !Split
            - ':'
            - !Join [':', [ !Select ['0', !Ref MgmtSubnetIds ], !Select ['1', !Ref MgmtSubnetIds ], !Select ['2', !Ref MgmtSubnetIds ] ] ]
      LaunchTemplate:
        LaunchTemplateId: !Ref FTDvLaunchTemplate
        Version: 1
      MinSize: !Ref ClusterSize
      DesiredCapacity: !Ref ClusterSize
      MaxSize: 16
      MetricsCollection:
        - Granularity: 1Minute
          Metrics:
            - GroupDesiredCapacity
            - GroupInServiceInstances
            - GroupTerminatingInstances
            - GroupTotalInstances
            - GroupStandbyInstances
      HealthCheckGracePeriod: 900
      Cooldown: 900
      TerminationPolicies:
        - OldestLaunchConfiguration
        - OldestLaunchTemplate
        - ClosestToNextInstanceHour
      LifecycleHookSpecificationList:
        - DefaultResult: ABANDON
          HeartbeatTimeout: 60
          LifecycleHookName: Launch_LifecycleHook
          LifecycleTransition: 'autoscaling:EC2_INSTANCE_LAUNCHING'
        - DefaultResult: CONTINUE
          HeartbeatTimeout: 400
          LifecycleHookName: Terminate_LifecycleHook
          LifecycleTransition: 'autoscaling:EC2_INSTANCE_TERMINATING'
  FTDvLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Join ['-', [!Ref ClusterGrpNamePrefix, !Ref ClusterNumber, 'NGFWv-launch-template' ] ]
      LaunchTemplateData:
        MetadataOptions:
          Fn::If:
            - EnableIMDSv2
            -
              HttpEndpoint: "enabled"  # Use Amazon DNS for metadata service
              HttpProtocolIpv6: "disabled"  # Disable IPv6 for metadata service
              HttpPutResponseHopLimit: 1  # Set hop limit to 1
              HttpTokens: "required"  # Require IMDSv2 for metadata requests
              # InstanceMetadataTags: "enabled"  # Include custom instance metadata tags
            - !Ref "AWS::NoValue"
        EbsOptimized: false
        ImageId: !Ref AmiID
        InstanceType: !Ref InstanceType
        NetworkInterfaces:
          - AssociatePublicIpAddress: !Ref AssignPublicIP
            DeleteOnTermination: true
            DeviceIndex: 0
            Groups: !Ref MgmtInterfaceSG
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
        Monitoring:
          Enabled: true
        UserData:
          Fn::Base64: !If
                        - support2zone
                        - !Sub
                          - '{ "AdminPassword": "FtDv_ClU3TeR44", "Hostname": "ftdvcluster", "FirewallMode": "routed", "ManageLocally": "No", "Cluster": { "CclSubnetRange": ["${CCLSubnet0}","${CCLSubnet1}"], "Geneve": "Yes", "HealthProbePort": "${TgHealthPort}", "ClusterGroupName":"${fmcDeviceGrpName}"}}'
                          - CCLSubnet0: !Select ['0', !Ref CCLSubnetRanges ]
                            CCLSubnet1: !Select ['1', !Ref CCLSubnetRanges ]
                        - !If
                          - support3zone
                          - !Sub
                            - '{ "AdminPassword": "FtDv_ClU3TeR44", "Hostname": "ftdvcluster", "FirewallMode": "routed", "ManageLocally": "No", "Cluster": { "CclSubnetRange": ["${CCLSubnet0}","${CCLSubnet1}","${CCLSubnet2}"], "Geneve": "Yes", "HealthProbePort": "${TgHealthPort}", "ClusterGroupName":"${fmcDeviceGrpName}"}}'
                            - CCLSubnet0: !Select ['0', !Ref CCLSubnetRanges ]
                              CCLSubnet1: !Select ['1', !Ref CCLSubnetRanges ]
                              CCLSubnet2: !Select ['2', !Ref CCLSubnetRanges ]
                          - !Sub
                            - '{ "AdminPassword": "FtDv_ClU3TeR44", "Hostname": "ftdvcluster", "FirewallMode": "routed", "ManageLocally": "No", "Cluster": { "CclSubnetRange": "${CCLSubnet0}", "Geneve": "Yes", "HealthProbePort": "${TgHealthPort}", "ClusterGroupName":"${fmcDeviceGrpName}"}}'
                            - CCLSubnet0: !Select ['0', !Ref CCLSubnetRanges ]
                            