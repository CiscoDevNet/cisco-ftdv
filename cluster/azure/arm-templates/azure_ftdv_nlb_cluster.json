{
   "$schema":"http://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "resourceNamePrefix":{
         "type":"string",
         "defaultValue":"ngfwv",
         "minLength":3,
         "maxLength":10,
         "metadata":{
            "description":"Prefix used in resource names created by this template(Use only lowercase letters)"
         }
      },
      "virtualNetworkRg":{
         "type":"string",
         "defaultValue":"cisco-virtualnet-rg",
         "metadata":{
            "description":"Virtual network resource group name"
         }
      },
      "virtualNetworkName":{
         "type":"string",
         "defaultValue":"cisco-virtualnet",
         "metadata":{
            "description":"Virtual network name"
         }
      },
      "virtualNetworkCidr":{
         "type":"string",
         "defaultValue":"10.0.0.0/16",
         "metadata":{
            "description":"CIDR of virtual network"
         }
      },
      "mgmtSubnet":{
         "type":"string",
         "defaultValue":"cisco-mgmt-subnet",
         "metadata":{
            "description":"Management subnet name"
         }
      },
      "insideSubnet":{
         "type":"string",
         "defaultValue":"cisco-inside-subnet",
         "metadata":{
            "description":"Inside subnet name."
         }
      },
      "insideNetworkGatewayIp":{
         "type":"string",
         "defaultValue":"10.0.3.1",
         "metadata":{
            "description":"Inside Subnet Gateway IP"
         }
      },
      "internalLoadBalancerIP":{
         "type":"string",
         "defaultValue":"10.0.3.4",
         "metadata":{
            "description":"Internal Loadbalancer IP in inside subnet."
         }
      },
      "outsideSubnet":{
         "type":"string",
         "defaultValue":"cisco-outside-subnet",
         "metadata":{
            "description":"Outside subnet name"
         }
      },
      "outsideNetworkGatewayIp":{
         "type":"string",
         "defaultValue":"10.0.4.1",
         "metadata":{
            "description":"Outside Subnet Gateway IP"
         }
      },
      "insideZoneName":{
         "type":"string",
         "defaultValue":"inside",
         "metadata":{
            "description":"Inside Security Zone Name"
         }
      },
      "outsideZoneName":{
         "type":"string",
         "defaultValue":"outside",
         "metadata":{
            "description":"Outside Security Zone Name"
         }
      },
      "cclSubnet":{
         "type":"string",
         "defaultValue":"ccl",
         "metadata":{
            "description":"Outside subnet name"
         }
      },
      "cclSubnetStartAddr":{
         "type":"string",
         "defaultValue":"10.0.5.4",
         "metadata":{
            "description":"Start Address of the CCL Subnet"
         }
      },
      "cclSubnetEndAddr":{
         "type":"string",
         "defaultValue":"10.0.5.253",
         "metadata":{
            "description":"End Address of the CCL Subnet"
         }
      },
      "functionHostingPlan": {
          "type": "string",
          "defaultValue": "consumption",
          "allowedValues": [
              "consumption",
              "premium"
          ],
          "metadata": {
              "description": "Deployment plan (consumption: uses the consumption hosting plan, premium: uses the premium hosting plan). Please refer user guide for details"
          }
      },
      "functionAppSubnet": {
          "type": "string",
          "defaultValue": "function-app-subnet",
          "metadata": {
              "description": "Function App subnet name"
          }
      },
      "functionAppSubnetCIDR": {
          "defaultValue": "10.0.6.0/24",
          "type": "string",
          "metadata": {
              "description": "The subnet CIDR for the function app"
          }
      },
      "softwareVersion": {
         "type": "string",
         "defaultValue": "77089.0.0",
         "allowedValues": [
             "77089.0.0",
             "760113.0.0",
             "742172.0.0",
             "73119.0.0"
         ],
         "metadata": {
             "description": "FTD Software version to use."
         }
       },
      "vmSize":{
         "type":"string",
         "defaultValue":"Standard_D4_v2",
         "allowedValues":[
            "Standard_D4_v2",
            "Standard_D5_v2"
         ],
         "metadata":{
            "description":"Size of the Virtual Machine"
         }
      },
      "ftdLicensingSku" : {
         "type" : "string",
         "defaultValue" : "ftdv-azure-payg",
         "allowedValues" : [
             "ftdv-azure-byol",
             "ftdv-azure-payg"
         ],
         "metadata" : {
             "description" : "Licensing model (ftdv-azure-byol : Bring-your-own-license, ftdv-azure-payg : Pay-as-you-go)"
         }
       },
      "ftdVmManagementUserName":{
         "type":"string",
         "defaultValue":"cisco",
         "metadata":{
            "description":"Username for primary account on the virtual machine (used only for vm management). This is not the admin username and 'admin' is reserved."
         }
      },
      "ftdVmManagementUserPassword":{
         "type":"securestring",
         "defaultValue":"",
         "metadata":{
            "description":"Password for the FTD VM management user (Passwords must be 12 to 72 characters long, must have : lowercase, uppercase, numbers & special characters and must have no more than 2 repeating characters)"
         }
      },
      "ftdAdminUserPassword":{
         "type":"securestring",
         "defaultValue":"",
         "metadata":{
            "description":"Password for FTD 'admin' user (Passwords must be 12 to 72 characters long, must have : lowercase, uppercase, numbers & special characters and must have no more than 2 repeating characters)"
         }
      },
      "fmcIpAddress":{
         "type":"string",
         "defaultValue":"1.2.3.4",
         "metadata":{
            "description":"FMC Public IP Address"
         }
      },
      "fmcUserName":{
         "type":"string",
         "defaultValue":"fmcUser",
         "metadata":{
            "description":"FMC User name"
         }
      },
      "fmcPassword":{
         "type":"securestring",
         "defaultValue":"",
         "metadata":{
            "description":"FMC Password"
         }
      },
      "policyName":{
         "type":"string",
         "defaultValue":"myPolicy",
         "metadata":{
            "description":"Security Policy Name created in FMC"
         }
      },
      "licenseCapability":{
         "type":"string",
         "defaultValue":"BASE,MALWARE,THREAT",
         "metadata":{
            "description":"Comma separated License Capability list (Valid values : BASE, MALWARE, URLFilter, THREAT)"
         }
      },
      "ftdvPerformanceTier":{
         "type":"string",
         "defaultValue":"FTDv30",
         "allowedValues":[
            "FTDv",
            "FTDv5",
            "FTDv10",
            "FTDv20",
            "FTDv30",
            "FTDv50",
            "FTDv100"
         ],
         "metadata":{
            "description":"PerformanceTier Value to be used while registering the FTDv instances to the FMCv"
         }
      },
      "clusterGroupName":{
         "type":"string",
         "defaultValue":"ClusterGroup",
         "metadata":{
            "description":"Cluster group name created in FMC"
         }
      },
      "healthCheckPortNumber": {
         "defaultValue": "7777",
         "type": "string",
         "metadata": {
             "description": "FTDv Health Check Port Number"
         }
       },
      "ftdvNodeCount":{
         "type":"int",
         "minValue":1,
         "maxValue":16,
         "defaultValue":4,
         "metadata":{
            "description":"Number of NGFWs Nodes in the cluster group"
         }
      },
      "scalingMetricsList":{
         "type":"string",
         "defaultValue":"CPU",
         "allowedValues":[
            "CPU",
            "CPU,MEMORY"
         ],
         "metadata":{
            "description":"Metrics used in taking scaling decision"
         }
      },
      "cpuScaleInThreshold":{
         "type":"string",
         "defaultValue":"10",
         "metadata":{
            "description":"Scale-IN threshold in % for CPU Metrics"
         }
      },
      "cpuScaleOutThreshold":{
         "type":"string",
         "defaultValue":"80",
         "metadata":{
            "description":"Scale-OUT threshold in % for CPU Metrics"
         }
      },
      "memoryScaleInThreshold":{
         "type":"string",
         "defaultValue":"0",
         "metadata":{
            "description":"Scale-IN threshold in % for Memory Metrics"
         }
      },
      "memoryScaleOutThreshold":{
         "type":"string",
         "defaultValue":"0",
         "metadata":{
            "description":"Scale-OUT threshold in % for Memory Metrics"
         }
      },
      "metricsAverageDuration":{
         "type":"string",
         "defaultValue":"1",
         "allowedValues":[
            "1",
            "5",
            "15",
            "30"
         ],
         "metadata":{
            "description":"Duration in minutes for which metrics samples are collected and averaged"
         }
      },
      "initDeploymentMode":{
         "type":"string",
         "defaultValue":"BULK",
         "allowedValues":[
            "BULK",
            "STEP"
         ],
         "metadata":{
            "description":"Initial deployment mode BULK/STEP"
         }
      },
      "scalingPolicy":{
         "type":"string",
         "defaultValue":"POLICY-1",
         "allowedValues":[
            "POLICY-1",
            "POLICY-2"
         ],
         "metadata":{
            "description":"Scaling Policy.. Refer user guide for details"
         }
      }
   },
   "variables":{
      "networkApiVersion": "2023-09-01",
      "webApiVersion": "2022-09-01",
      "vmssName":"[concat(parameters('resourceNamePrefix'),'-vmss')]",
      "elbName":"[concat(parameters('resourceNamePrefix'),'-elb')]",
      "ilbName":"[concat(parameters('resourceNamePrefix'),'-ilb')]",
      "dataSecGrp":"[concat(parameters('resourceNamePrefix'),'-dataIntfSecGrp')]",
      "mgmtSecGrp":"[concat(parameters('resourceNamePrefix'),'-mgmtIntfSecGrp')]",
      "logicAppName":"[concat(parameters('resourceNamePrefix'),'-logic-app')]",
      "functionAppName":"[concat(parameters('resourceNamePrefix'),'-function-app')]",
      "appInsightsName":"[concat(parameters('resourceNamePrefix'),'-appinsight')]",
      "elbPublicIpName":"[concat(variables('elbName'),'-public-ip')]",
      "elbId":"[resourceId('Microsoft.Network/loadBalancers',variables('elbName'))]",
      "ilbId":"[resourceId('Microsoft.Network/loadBalancers',variables('ilbName'))]",
      "vnetId":"[resourceId(parameters('virtualNetworkRg'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
      "mgmtSubnetId":"[concat(variables('vnetID'),'/subnets/', parameters('mgmtSubnet'))]",
      "insideSubnetId":"[concat(variables('vnetID'),'/subnets/', parameters('insideSubnet'))]",
      "outsideSubnetId":"[concat(variables('vnetID'),'/subnets/', parameters('outsideSubnet'))]",
      "cclSubnetId":"[concat(variables('vnetID'),'/subnets/', parameters('cclSubnet'))]",
      "storageAccountName":"[concat(parameters('resourceNamePrefix'), uniquestring(resourceGroup().id))]",
      "storageAccountid":"[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
      "hostingPlanName": "[concat(parameters('resourceNamePrefix'),'-hostingPlan')]",
      "publicIpAddressName": "[concat(parameters('resourceNamePrefix'),'-outbound-IP')]",
      "natGatewayName": "[concat(parameters('resourceNamePrefix'),'-nat-gw')]",
      "functionAppSubnetId": "[resourceId(parameters('virtualNetworkRg'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('functionAppSubnet'))]",
      "functionAppSubnetDeployment": "[concat(parameters('resourceNamePrefix'),'-functionAppSubnetDeployment')]",
      "functionHostingPlanType": "[parameters('functionHostingPlan')]",
      "functionAppId":"[concat(resourceGroup().id,'/providers/','Microsoft.Web/sites/', variables('functionAppName'))]",
      "functionWorkerRuntime":"python",
      "appInsightsSourceName":"IbizaWebAppExtensionCreate",
      "hostNameBindingsName":"[concat(variables('functionAppName'), '/', variables('functionAppName'), '.azurewebsites.net')]",
      "hostSslName1":"[concat(toLower(variables('functionAppName')), '.azurewebsites.net')]",
      "hostSslName2":"[concat(toLower(variables('functionAppName')), '.scm.azurewebsites.net')]",
      "vmssVmMgmtNicName":"mgmtNic",
      "vmssVmInsideNicName":"insideNic",
      "vmssVmOutsideNicName":"outsideNic",
      "vmssVmCclNicName":"cclNic",
      "idleTimeoutInMinutes":30,
      "publisher":        "cisco",
      "offer":            "cisco-ftdv",
      "sku":              "[parameters('ftdLicensingSku')]",
      "role1":"[guid(resourceGroup().id,subscription().subscriptionId,'role1')]",
      "role2":"[guid(resourceGroup().id,subscription().subscriptionId,'role2')]",
      "customData":"[concat('{\"AdminPassword\":\"', parameters('ftdAdminUserPassword'), '\",\"Hostname\": \"cisco-ftdv\", \"FmcIp\": \"DONTRESOLVE\", \"FmcRegKey\":\"1234\", \"FmcNatId\":\"5678\", \"FirewallMode\":\"routed\", \"Diagnostic\":\"OFF\", \"Cluster\":{\"CclSubnetRange\": \"', parameters('cclSubnetStartAddr'), ' ', parameters('cclSubnetEndAddr'), '\",\"ClusterGroupName\":\"', parameters('clusterGroupName'), '\"}}')]"
   },
   "resources":[
      {
         "name":"[variables('LogicAppName')]",
         "type":"Microsoft.Logic/workflows",
         "location":"[resourceGroup().location]",
         "apiVersion":"2019-05-01",
         "tags":{
            "displayName":"LogicApp"
         },
         "properties":{
            "state":"Disabled",
            "definition":{
               "$schema":"https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
               "actions":{
                  
               },
               "contentVersion":"1.0.0.0",
               "outputs":{
                  
               },
               "parameters":{
                  
               },
               "triggers":{
                  "manual":{
                     "inputs":{
                        "schema":{
                           
                        }
                     },
                     "kind":"Http",
                     "type":"Request"
                  }
               }
            },
            "parameters":{
               
            }
         }
      },
      {
         "apiVersion":"[variables('networkApiVersion')]",
         "type":"Microsoft.Network/networkSecurityGroups",
         "name":"[variables('mgmtSecGrp')]",
         "location":"[resourceGroup().location]",
         "properties":{
            "securityRules":[
               {
                  "name":"SSH-Rule",
                  "properties":{
                     "description":"Allowing SSH port to access to FTDv instances",
                     "protocol":"Tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"22",
                     "sourceAddressPrefix": "[if(equals(variables('functionHostingPlanType'), 'premium'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))).ipAddress, concat('AzureCloud.', resourceGroup().location))]",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":100,
                     "direction":"Inbound"
                  }
               },
               {
                  "name":"HTTPS-Rule",
                  "properties":{
                     "description":"Allow tcp 443",
                     "protocol":"Tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"443",
                     "sourceAddressPrefix": "[if(equals(variables('functionHostingPlanType'), 'premium'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))).ipAddress, concat('AzureCloud.', resourceGroup().location))]",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":101,
                     "direction":"Inbound"
                  }
               },
               {
                  "name":"Fmc-Port",
                  "properties":{
                     "description":"Port 8305 for FMC communication",
                     "protocol":"Tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"8305",
                     "sourceAddressPrefix": "[parameters('fmcIpAddress')]",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":102,
                     "direction":"Inbound"
                  }
               }
            ]
         }
      },
      {
         "apiVersion":"[variables('networkApiVersion')]",
         "type":"Microsoft.Network/networkSecurityGroups",
         "name":"[variables('dataSecGrp')]",
         "location":"[resourceGroup().location]",
         "properties":{
            "securityRules":[
               {
                  "name":"Allow-HTTPS-Traffic",
                  "properties":{
                     "description":"Allowing the https traffic for the data interface",
                     "protocol":"Tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"443",
                     "sourceAddressPrefix":"Internet",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":100,
                     "direction":"Inbound"
                  }
               },
               {
                  "name": "health-probe",
                  "properties": {
                     "description": "This rule is enable health probe traffic to reach the FTDv",
                     "protocol": "Tcp",
                     "sourcePortRange": "*",
                     "destinationPortRange": "[parameters('healthCheckPortNumber')]",
                     "sourceAddressPrefix": "168.63.129.16",
                     "destinationAddressPrefix": "*",
                     "access": "Allow",
                     "priority": 110,
                     "direction": "Inbound"
                  }
               }
            ]
         }
      },
      {
         "type":"Microsoft.Storage/storageAccounts",
         "apiVersion":"2023-01-01",
         "name":"[variables('storageAccountName')]",
         "location":"[resourceGroup().location]",
         "kind":"StorageV2",
         "sku":{
            "name":"Standard_LRS"
         }
      },
      {
            "condition": "[equals(variables('functionHostingPlanType'), 'premium')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "[variables('webApiVersion')]",
            "name": "[variables('hostingPlanName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "Tier": "ElasticPremium",
                "Name": "EP1"
            },
            "kind": "linux",
            "properties": {
                "reserved": true,
                "maximumElasticWorkerCount": "20",
                "zoneRedundant": false
            }
        },
        {
            "condition": "[equals(variables('functionHostingPlanType'), 'premium')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIpAddressName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
            }
        },
        {
            "condition": "[equals(variables('functionHostingPlanType'), 'premium')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "type": "Microsoft.Network/natGateways",
            "name": "[variables('natGatewayName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddresses": [
                    {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]"
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]"
            ]
        },
        {
            "condition": "[equals(variables('functionHostingPlanType'), 'premium')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-07-01",
            "name": "[variables('functionAppSubnetDeployment')]",
            "resourceGroup": "[parameters('virtualNetworkRg')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "name": "[concat(parameters('virtualNetworkName') , '/', parameters('functionAppSubnet'))]",
                            "properties": {
                                "delegations": [
                                    {
                                        "name": "delegation",
                                        "properties": {
                                            "serviceName": "Microsoft.Web/serverfarms",
                                            "actions": [
                                                "Microsoft.Network/virtualNetworks/subnets/action"
                                            ]
                                        },
                                        "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                                    }
                                ],
                                "addressPrefixes": [
                                    "[parameters('functionAppSubnetCIDR')]"
                                ],
                                "natGateway": {
                                    "id": "[resourceId('Microsoft.Network/natGateways', variables('natGatewayName'))]"
                                },
                                "serviceAssociationLinks": [
                                    {
                                        "name": "AppServiceLink",
                                        "type": "Microsoft.Network/virtualNetworks/subnets/serviceAssociationLinks",
                                        "properties": {
                                            "linkedResourceType": "Microsoft.Web/serverfarms",
                                            "link": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Network/natGateways', variables('natGatewayName'))]"
            ]
        },
        {
         "apiVersion":"[variables('webApiVersion')]",
         "type":"Microsoft.Web/sites",
         "name":"[variables('functionAppName')]",
         "location":"[resourceGroup().location]",
         "kind":"functionapp,linux",
         "identity":{
            "type":"SystemAssigned"
         },
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
            "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
            "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
            "[variables('functionAppSubnetDeployment')]"
         ],
         "properties":{
            "enabled":true,
            "reserved":true,
            "serverFarmId": "[if(equals(variables('functionHostingPlanType'), 'premium'), resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName')), json('null'))]",
            "virtualNetworkSubnetId": "[if(equals(variables('functionHostingPlanType'), 'premium'), variables('functionAppSubnetId'), json('null'))]",
            "vnetRouteAllEnabled": true,
            "siteConfig":{
               "linuxFxVersion":"Python|3.9",
               "appSettings":[
                  {
                     "name":"AzureWebJobsDashboard",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                  },
                  {
                     "name":"AzureWebJobsStorage",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                  },
                  {
                     "name":"WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                  },
                  {
                     "name":"WEBSITE_CONTENTSHARE",
                     "value":"[toLower(variables('functionAppName'))]"
                  },
                  {
                     "name":"FUNCTION_APP_NAME",
                     "value":"[variables('functionAppName')]"
                  },
                  {
                     "name":"FUNCTIONS_EXTENSION_VERSION",
                     "value":"~4"
                  },
                  {
                     "name":"WEBSITE_NODE_DEFAULT_VERSION",
                     "value":"8.11.1"
                  },
                  {
                     "name":"APPINSIGHTS_INSTRUMENTATIONKEY",
                     "value":"[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
                  },
                  {
                     "name":"FUNCTIONS_WORKER_RUNTIME",
                     "value":"[variables('functionWorkerRuntime')]"
                  },
                  {
                     "name":"ANY_IPV4_NAME",
                     "value":"[concat(parameters('resourceNamePrefix'),'-anyipv4')]"
                  },
                  {
                     "name":"AZURE_UTILITY_IP",
                     "value":"168.63.129.16"
                  },
                  {
                     "name":"AZURE_UTILITY_IP_NAME",
                     "value":"azure-utility-ip"
                  },
                  {
                     "name":"FMC_DOMAIN_UUID",
                     "value":"e276abec-e0f2-11e3-8169-6d9ed49b625f"
                  },
                  {
                     "name":"FMC_IP",
                     "value":"[parameters('fmcIpAddress')]"
                  },
                  {
                     "name":"FMC_PASSWORD",
                     "value":"[parameters('fmcPassword')]"
                  },
                  {
                     "name":"FMC_USERNAME",
                     "value":"[parameters('fmcUserName')]"
                  },
                  {
                     "name":"FTD_PASSWORD",
                     "value":"[parameters('ftdAdminUserPassword')]"
                  },
                  {
                     "name":"FTD_USERNAME",
                     "value":"admin"
                  },
                  {
                     "name":"FUNCTION_APP_EDIT_MODE",
                     "value":"readwrite"
                  },
                  {
                     "name":"INSIDE_NETWORK_GATEWAY",
                     "value":"[parameters('insideNetworkGatewayIp')]"
                  },
                  {
                     "name":"INSIDE_GW_OBJ_NAME",
                     "value":"[concat(parameters('resourceNamePrefix'),'-inside-gw')]"
                  },
                  {
                     "name":"INSIDE_NIC_INTERFACE",
                     "value":"GigabitEthernet0/0"
                  },
                  {
                     "name":"INSIDE_NIC_NAME",
                     "value":"inside"
                  },
                  {
                     "name":"INSIDE_ZONE",
                     "value":"[parameters('insideZoneName')]"
                  },
                  {
                     "name":"OUTSIDE_NETWORK_GATEWAY",
                     "value":"[parameters('outsideNetworkGatewayIp')]"
                  },
                  {
                     "name":"OUTSIDE_GW_OBJ_NAME",
                     "value":"[concat(parameters('resourceNamePrefix'),'-outside-gw')]"
                  },
                  {
                     "name":"OUTSIDE_NIC_INTERFACE",
                     "value":"GigabitEthernet0/1"
                  },
                  {
                     "name":"OUTSIDE_NIC_NAME",
                     "value":"outside"
                  },
                  {
                     "name":"OUTSIDE_ZONE",
                     "value":"[parameters('outsideZoneName')]"
                  },
                  {
                     "name":"MAX_FTD_COUNT",
                     "value":"16"
                  },
                  {
                     "name":"MIN_FTD_COUNT",
                     "value":"[parameters('ftdvNodeCount')]"
                  },
                  {
                     "name":"MNGT_IP_CONFIG_NAME",
                     "value":"myIpConfig"
                  },
                  {
                     "name":"MNGT_NET_INTERFACE_NAME",
                     "value":"mgmtNic"
                  },
                  {
                     "name":"MNGT_PUBLIC_IP_NAME",
                     "value":"mgmtPublicIP"
                  },
                  {
                     "name":"NAT_ID",
                     "value":"5678"
                  },
                  {
                     "name":"NETWORK_CIDR",
                     "value":"[parameters('virtualNetworkCidr')]"
                  },
                  {
                     "name":"NETWORK_NAME",
                     "value":"[concat(parameters('resourceNamePrefix'),'-vnet')]"
                  },
                  {
                     "name":"POLICY_NAME",
                     "value":"[parameters('policyName')]"
                  },
                  {
                     "name":"REG_KEY",
                     "value":"1234"
                  },
                  {
                     "name":"RESOURCE_GROUP_NAME",
                     "value":"[resourceGroup().name]"
                  },
                  {
                     "name":"RESOURCE_PREFIX_NAME",
                     "value":"[parameters('resourceNamePrefix')]"
                  },
                  {
                     "name":"SUBSCRIPTION_ID",
                     "value":"[subscription().subscriptionId]"
                  },
                  {
                     "name":"SAMPLING_TIME_MIN",
                     "value":"[parameters('metricsAverageDuration')]"
                  },
                  {
                     "name":"SCALE_IN_THRESHLD_CPU",
                     "value":"[parameters('cpuScaleInThreshold')]"
                  },
                  {
                     "name":"SCALE_OUT_THRESHLD_CPU",
                     "value":"[parameters('cpuScaleOutThreshold')]"
                  },
                  {
                     "name":"SCALE_IN_THRESHLD_MEM",
                     "value":"[parameters('memoryScaleInThreshold')]"
                  },
                  {
                     "name":"SCALE_OUT_THRESHLD_MEM",
                     "value":"[parameters('memoryScaleOutThreshold')]"
                  },
                  {
                     "name":"VMSS_NAME",
                     "value":"[variables('vmssName')]"
                  },
                  {
                     "name":"DELETE_FAULTY_FTD",
                     "value":"YES"
                  },
                  {
                     "name":"DELETE_UNHEALTHY_FTD",
                     "value":"NO"
                  },
                  {
                     "name":"INITIAL_DEPLOYMENT_MODE",
                     "value":"[parameters('initDeploymentMode')]"
                  },
                  {
                     "name":"SCALING_POLICY",
                     "value":"[parameters('scalingPolicy')]"
                  },
                  {
                     "name":"CLUSTER_GROUP_NAME",
                     "value":"[parameters('clusterGroupName')]"
                  },
                  {
                     "name":"SET_UNIQUE_HOST_NAME",
                     "value":"YES"
                  },
                  {
                     "name":"LICENSE_CAPABILITY",
                     "value":"[parameters('licenseCapability')]"
                  },
                  {
                     "name": "PERFORMANCE_TIER",
                     "value": "[parameters('ftdvPerformanceTier')]"
                   },
                  {
                     "name":"SCALING_METRICS_LIST",
                     "value":"[parameters('scalingMetricsList')]"
                  },
                  {
                     "name":"GWLB_SUPPORT",
                     "value":"NO"
                  }
               ]
            }
         }
      },
      {
         "apiVersion":"2020-02-02",
         "name":"[variables('appInsightsName')]",
         "type":"Microsoft.Insights/components",
         "kind":"web",
         "location":"[resourceGroup().location]",
         "tags":{
            "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('functionAppName'))]":"Resource"
         },
         "properties":{
            "Application_Type":"web",
            "ApplicationId":"[variables('appInsightsName')]",
            "Request_Source":"[variables('appInsightsSourceName')]"
         }
      },
      {
         "type":"Microsoft.Web/sites/hostNameBindings",
         "apiVersion":"[variables('webApiVersion')]",
         "name":"[variables('hostNameBindingsName')]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
         ],
         "properties":{
            "siteName":"[concat(variables('functionAppName'),'-site')]",
            "hostNameType":"Verified"
         }
      },
      {
         "apiVersion":"[variables('networkApiVersion')]",
         "type":"Microsoft.Network/publicIPAddresses",
         "name":"[variables('elbPublicIpName')]",
         "location":"[resourceGroup().location]",
         "sku":{
            "name":"Standard"
         },
         "properties":{
            "publicIPAllocationMethod":"Static",
            "dnsSettings":{
               "domainNameLabel":"[variables('elbPublicIpName')]"
            },
            "idleTimeoutInMinutes":"[variables('idleTimeoutInMinutes')]"
         }
      },
      {
         "type":"Microsoft.Network/loadBalancers",
         "apiVersion":"[variables('networkApiVersion')]",
         "name":"[variables('elbName')]",
         "location":"[resourceGroup().location]",
         "sku":{
            "name":"Standard"
         },
         "dependsOn":[
            "[concat('Microsoft.Network/publicIPAddresses/', variables('elbPublicIpName'))]"
         ],
         "properties":{
            "frontendIPConfigurations":[
               {
                  "name":"LoadBalancerFrontEnd",
                  "properties":{
                     "publicIPAddress":{
                        "id":"[resourceId('Microsoft.Network/publicIPAddresses/', variables('elbPublicIpName'))]"
                     }
                  }
               }
            ],
            "backendAddressPools":[
               {
                  "name":"backendPool"
               }
            ],
            "loadBalancingRules":[
               {
                  "Name":"lbrule",
                  "properties":{
                     "frontendIPConfiguration":{
                        "Id":"[concat(resourceId('Microsoft.Network/loadBalancers', variables('elbName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
                     },
                     "backendAddressPool":{
                        "Id":"[concat(resourceId('Microsoft.Network/loadBalancers', variables('elbName')), '/backendAddressPools/BackendPool')]"
                     },
                     "probe":{
                        "Id":"[concat(resourceId('Microsoft.Network/loadBalancers', variables('elbName')), '/probes/lbprobe')]"
                     },
                     "protocol":"TCP",
                     "frontendPort":"80",
                     "backendPort":"80",
                     "idleTimeoutInMinutes":"[variables('idleTimeoutInMinutes')]"
                  }
               }
            ],
            "probes":[
               {
                  "properties":{
                     "protocol":"Tcp",
                     "port":"[parameters('healthCheckPortNumber')]",
                     "intervalInSeconds":5,
                     "numberOfProbes":2
                  },
                  "name":"lbprobe"
               }
            ]
         }
      },
      {
         "type":"Microsoft.Network/loadBalancers",
         "apiVersion":"[variables('networkApiVersion')]",
         "name":"[variables('ilbName')]",
         "location":"[resourceGroup().location]",
         "sku":{
            "name":"Standard"
         },
         "dependsOn":[
           
         ],
         "properties":{
            "frontendIPConfigurations":[
               {
                  "name":"LoadBalancerFrontEnd",
                  "properties":{
                     "subnet":{
                        "id":"[variables('insideSubnetId')]"
                     },
                     "privateIPAddress":"[parameters('internalLoadBalancerIP')]",
                     "privateIPAllocationMethod":"Static"
                  }
               }
            ],
            "backendAddressPools":[
               {
                  "name":"backendPool"
               }
            ],
            "loadBalancingRules":[
               {
                  "properties":{
                     "frontendIPConfiguration":{
                        "Id":"[concat(resourceId('Microsoft.Network/loadBalancers', variables('ilbName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
                     },
                     "backendAddressPool":{
                        "Id":"[concat(resourceId('Microsoft.Network/loadBalancers', variables('ilbName')), '/backendAddressPools/BackendPool')]"
                     },
                     "probe":{
                        "Id":"[concat(resourceId('Microsoft.Network/loadBalancers', variables('ilbName')), '/probes/lbprobe')]"
                     },
                     "protocol":"All",
                     "frontendPort":0,
                     "backendPort":0,
                     "idleTimeoutInMinutes":"[variables('idleTimeoutInMinutes')]"
                  },
                  "Name":"lbrule"
               }
            ],
            "probes":[
               {
                  "properties":{
                     "protocol":"Tcp",
                     "port":"[parameters('healthCheckPortNumber')]",
                     "intervalInSeconds":5,
                     "numberOfProbes":2
                  },
                  "name":"lbprobe"
               }
            ]
         }
      },
      {
         "type":"Microsoft.Compute/virtualMachineScaleSets",
         "apiVersion":"2023-09-01",
         "name":"[variables('vmssName')]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Network/loadBalancers/', variables('elbName'))]",
            "[concat('Microsoft.Network/loadBalancers/', variables('ilbName'))]",
            "[concat('Microsoft.Network/networkSecurityGroups/',variables('mgmtSecGrp'))]",
            "[concat('Microsoft.Network/networkSecurityGroups/',variables('dataSecGrp'))]"
         ],
         "sku":{
            "name":"[parameters('vmSize')]",
            "capacity":0
         },
         "zones":[
            "1",
            "2",
            "3"
         ],
         "plan": {
            "name": "[variables('sku')]",
            "publisher": "[variables('publisher')]",
            "product": "[variables('offer')]"
         },
         "properties":{
            "singlePlacementGroup":false,
            "upgradePolicy":{
               "mode":"Manual"
            },
            "virtualMachineProfile":{
               "storageProfile":{
                  "imageReference":{
                     "publisher": "[variables('publisher')]",
                     "offer": "[variables('offer')]",
                     "sku": "[variables('sku')]",
                     "version": "[parameters('softwareVersion')]"
                  }
               },
               "osProfile":{
                  "computerNamePrefix":"[variables('vmssName')]",
                  "adminUsername":"[parameters('ftdVmManagementUserName')]",
                  "adminPassword":"[parameters('ftdVmManagementUserPassword')]",
                  "customData":"[base64(variables('customData'))]"
               },
               "diagnosticsProfile":{
                  "bootDiagnostics":{
                     "enabled":true,
                     "storageUri":"[concat('https://',variables('storageAccountName'),'.blob.core.windows.net')]"
                  }
               },
               "networkProfile":{
                  "networkInterfaceConfigurations":[
                     {
                        "name":"[variables('vmssVmMgmtNicName')]",
                        "properties":{
                           "primary":true,
                           "networkSecurityGroup":{
                              "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('mgmtSecGrp'))]"
                           },
                           "ipConfigurations":[
                              {
                                 "name":"myIpConfig",
                                 "properties":{
                                    "subnet":{
                                       "id":"[variables('mgmtSubnetId')]"
                                    },
                                    "publicipaddressconfiguration":{
                                       "name":"mgmtPublicIP",
                                       "properties":{
                                          "idleTimeoutInMinutes":"[variables('idleTimeoutInMinutes')]"
                                       }
                                    }
                                 }
                              }
                           ]
                        }
                     },
                     {
                        "name":"[variables('vmssVmInsideNicName')]",
                        "properties":{
                           "primary":false,
                           "enableAcceleratedNetworking":true,
                           "enableIPForwarding":true,
                           "networkSecurityGroup":{
                              "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('dataSecGrp'))]"
                           },
                           "ipConfigurations":[
                              {
                                 "name":"myIpConfig",
                                 "properties":{
                                    "subnet":{
                                       "id":"[variables('insideSubnetId')]"
                                    },
                                    "loadBalancerBackendAddressPools":[
                                       {
                                          "id":"[concat( variables('ilbId'), '/backendAddressPools/backendPool')]"
                                       }
                                    ]
                                 }
                              }
                           ]
                        }
                     },
                     {
                        "name":"[variables('vmssVmOutsideNicName')]",
                        "properties":{
                           "primary":false,
                           "enableAcceleratedNetworking":true,
                           "enableIPForwarding":true,
                           "networkSecurityGroup":{
                              "id":"[resourceId('Microsoft.Network/networkSecurityGroups', variables('dataSecGrp'))]"
                           },
                           "ipConfigurations":[
                              {
                                 "name":"myIpConfig",
                                 "properties":{
                                    "subnet":{
                                       "id":"[variables('outsideSubnetId')]"
                                    },
                                    "loadBalancerBackendAddressPools":[
                                       {
                                          "id":"[concat( variables('elbId'), '/backendAddressPools/backendPool')]"
                                       }
                                    ]
                                 }
                              }
                           ]
                        }
                     },
                     {
                        "name":"[variables('vmssVmCclNicName')]",
                        "properties":{
                           "primary":false,
                           "enableAcceleratedNetworking":true,
                           "ipConfigurations":[
                              {
                                 "name":"myIpConfig",
                                 "properties":{
                                    "subnet":{
                                       "id":"[variables('cclSubnetId')]"
                                    }
                                 }
                              }
                           ]
                        }
                     }
                  ]
               }
            }
         }
      },
      {
         "type":"Microsoft.Authorization/roleAssignments",
         "apiVersion":"2022-04-01",
         "name":"[variables('role1')]",
         "dependsOn":[
            "[resourceID('Microsoft.Compute/virtualMachineScaleSets', variables('vmssName'))]"
         ],
         "properties":{
            "roleDefinitionId":"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
            "principalId":"[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2016-03-01', 'Full').identity.principalId]"
         }
      },
      {
         "type":"Microsoft.Authorization/roleAssignments",
         "apiVersion":"2022-04-01",
         "name":"[variables('role2')]",
         "dependsOn":[
            "[resourceID('Microsoft.Compute/virtualMachineScaleSets', variables('vmssName'))]"
         ],
         "properties":{
            "roleDefinitionId":"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '974c5e8b-45b9-4653-ba55-5f855dd0fb88')]",
            "principalId":"[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2016-03-01', 'Full').identity.principalId]"
         }
      }
   ]
}
