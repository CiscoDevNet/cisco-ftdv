##########################################################################################
#Copyright (c) 2022 Cisco Systems Inc or its affiliates.                                 #
#All Rights Reserved.                                                                    #
#Licensed under the Apache License, Version 2.0 (the "License");                         #
#you may not use this file except in compliance with the License.                        #
#You may obtain a copy of the License at                                                 #
#http://www.apache.org/licenses/LICENSE-2.0                                              #
#Unless required by applicable law or agreed to in writing, software                     #
#distributed under the License is distributed on an "AS IS" BASIS,                       #
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.                #
#See the License for the specific language governing permissions and                     #
#limitations under the License.                                                          #
##########################################################################################
# File: ftdv_ptemplate.jinja                                                             #
# Purpose: Template for Autoscale Deployment, takes parameters from ftdv_parameters.yaml #
##########################################################################################

{% set BASE_URL = 'https://www.googleapis.com/compute/v1' %}
resources:
# Instance Template
- name: {{ properties["resourceNamePrefix"] }}-ftdv-instance-template
  type: compute.v1.instanceTemplate
  properties:
    properties:
      tags:
        items:
          - {{ properties["mgmtFirewallRule"] }}
          - {{ properties["diagFirewallRule"] }}
          - {{ properties["outsideFirewallRule"] }}
          - {{ properties["insideFirewallRule"] }}
          - {{ properties["healthCheckFirewallRule"] }}
      machineType: {{ properties["machineType"] }}
      canIpForward: true
      disks:
      - deviceName: boot
        type: PERSISTENT
        boot: true
        autoDelete: true
        initializeParams:
          sourceImage: {{ properties["sourceImageURL"] }}
          diskType: pd-standard
          diskSizeGb: 49
      networkInterfaces:
        - name: nic0
          network: projects/{{ env["project"] }}/global/networks/{{ properties["outsideVpcName"] }}
          subnetwork: projects/{{ env["project"] }}/regions/{{ properties["region"] }}/subnetworks/{{ properties["outsideSubnetworkName"] }}
          kind: compute#networkInterface
        - name: nic1
          network: projects/{{ env["project"] }}/global/networks/{{ properties["insideVpcName"] }}
          subnetwork: projects/{{ env["project"] }}/regions/{{ properties["region"] }}/subnetworks/{{ properties["insideSubnetworkName"] }}
          kind: compute#networkInterface
        - name: nic2
          network: projects/{{ env["project"] }}/global/networks/{{ properties["mgmtVpcName"] }}
          subnetwork: projects/{{ env["project"] }}/regions/{{ properties["region"] }}/subnetworks/{{ properties["mgmtSubnetworkName"] }}
          kind: compute#networkInterface
          {% if properties["deployUsingExternalIP"] %}
          accessConfigs:
           - name: External NAT
             type: ONE_TO_ONE_NAT
          {% endif %}
        - name: nic3
          network: projects/{{ env["project"] }}/global/networks/{{ properties["diagVpcName"] }}
          subnetwork: projects/{{ env["project"] }}/regions/{{ properties["region"] }}/subnetworks/{{ properties["diagSubnetworkName"] }}
          kind: compute#networkInterface
      reservationAffinity:
        consumeReservationType: ANY_RESERVATION
      metadata:
        kind: compute#metadata
        items:
          - value: |-
                {
                  "AdminPassword": "{{ properties["adminPassword"] }}",
                  "Hostname": "ftdv-gcp",
                  "DNS1": "8.8.8.8",
                  "FirewallMode": "routed",
                  "IPv4Mode": "dhcp",
                  "ManageLocally": "No"
                }
            key: startup-script
          - value: {{ properties["publicKey"] }}
            key: ssh-keys
      scheduling:
        onHostMaintenance: MIGRATE
        automaticRestart: true
      labels:
        autostop: 'false'
      serviceAccounts: 
        - email: {{ properties["serviceAccountMailId"] }}
          scopes:
          - https://www.googleapis.com/auth/devstorage.read_only
          - https://www.googleapis.com/auth/logging.write
          - https://www.googleapis.com/auth/monitoring.write
          - https://www.googleapis.com/auth/service.management.readonly
          - https://www.googleapis.com/auth/servicecontrol
          - https://www.googleapis.com/auth/trace.append
# Instance Group
- name: {{ properties["resourceNamePrefix"] }}-ftdv-instance-group
  type: compute.v1.regionInstanceGroupManager
  properties:
    region: {{ properties["region"] }}
    # DISTRIBUTIONPOLICY MAY VARY ACCORDING TO NUMBER OF ZONES IN A PARTICULAR REGION, CHANGE ACCORDINGLY WITH REGION.
    distributionPolicy:
      zones:
        - zone: {{ BASE_URL }}/projects/{{ env["project"] }}/zones/{{ properties["region"] }}-a
        - zone: {{ BASE_URL }}/projects/{{ env["project"] }}/zones/{{ properties["region"] }}-b
        - zone: {{ BASE_URL }}/projects/{{ env["project"] }}/zones/{{ properties["region"] }}-c
    instanceTemplate: $(ref.{{ properties["resourceNamePrefix"] }}-ftdv-instance-template.selfLink)
    baseInstanceName: {{ properties["resourceNamePrefix"] }}-ftdv-instance
    targetSize: 1
# Autoscaler
- name: {{ properties["resourceNamePrefix"] }}-ftdv-autoscaler
  type: compute.v1.regionAutoscaler
  properties:
    target: $(ref.{{ properties["resourceNamePrefix"] }}-ftdv-instance-group.selfLink)
    region: {{ properties["region"] }}
    autoscalingPolicy:
      cpuUtilization:
        utilizationTarget: {{ properties["cpuUtilizationTarget"] }}
      mode: 'ON'
      coolDownPeriodSec: {{ properties["coolDownPeriodSec"] }}
      minNumReplicas: {{ properties["minFTDReplicas"] }}
      maxNumReplicas: {{ properties["maxFTDReplicas"] }}

# ELB Services
- name: {{ properties["resourceNamePrefix"] }}-ftdv-backend-service-elb
  type: compute.v1.regionBackendService
  properties:
    region: {{ properties["region"] }}
    port: {{ properties["elbPort"] }}
    portName: {{ properties["elbPortName"] }}
    protocol: {{ properties["elbProtocol"] }}
    loadBalancingScheme: EXTERNAL
    backends:
    - name: {{ properties["resourceNamePrefix"] }}-ftdv-backend-service-elb-backends
      group: $(ref.{{ properties["resourceNamePrefix"] }}-ftdv-instance-group.instanceGroup)
    healthChecks: 
    - $(ref.{{ properties["resourceNamePrefix"] }}-ftdv-hc-elb.selfLink)
- name: {{ properties["resourceNamePrefix"] }}-ftdv-hc-elb
  type: compute.v1.regionHealthChecks
  properties:
    region: {{ properties["region"] }}
    tcpHealthCheck:
      port: {{ properties["elbPort"] }}
      proxyHeader: NONE
    timeoutSec: {{ properties["elbTimeoutSec"] }}
    type: {{ properties["elbProtocolName"] }}
    unhealthyThreshold: {{ properties["elbUnhealthyThreshold"] }}
- name: {{ properties["resourceNamePrefix"] }}-ftdv-fr-elb
  type: compute.v1.forwardingRule
  properties:
    IPProtocol: {{ properties["elbIpProtocol"] }}
    IPAddress: $(ref.{{ properties["resourceNamePrefix"] }}-ftdv-elb-ip.address)
    backendService: $(ref.{{ properties["resourceNamePrefix"] }}-ftdv-backend-service-elb.selfLink)
    loadBalancingScheme: EXTERNAL
    region: {{ properties["region"] }}
    ports: {{ properties["elbFePorts"] }}
- name: {{ properties["resourceNamePrefix"] }}-ftdv-elb-ip
  type: compute.v1.address
  properties:
    addressType: EXTERNAL
    region: {{ properties["region"] }}

# ILB Services
- name: {{ properties["resourceNamePrefix"] }}-ftdv-backend-service-ilb
  type: compute.v1.regionBackendService
  properties:
    region: {{ properties["region"] }}
    protocol: {{ properties["ilbProtocol"] }}
    loadBalancingScheme: INTERNAL
    backends:
    - group: $(ref.{{ properties["resourceNamePrefix"] }}-ftdv-instance-group.instanceGroup)
    healthChecks:
    - $(ref.{{ properties["resourceNamePrefix"] }}-ftdv-hc-ilb.selfLink)
    connectionDraining:
      drainingTimeoutSec: {{ properties["ilbDrainingTimeoutSec"] }}
    network: projects/{{ env["project"] }}/global/networks/{{ properties["insideVpcName"] }}
- name: {{ properties["resourceNamePrefix"] }}-ftdv-hc-ilb
  type: compute.v1.healthCheck
  properties:
    tcpHealthCheck:
      port: {{ properties["ilbPort"] }}
    checkIntervalSec: {{ properties["ilbCheckIntervalSec"] }}
    timeoutSec: {{ properties["ilbTimeoutSec"] }}
    type: {{ properties["ilbProtocolName"] }}
    unhealthyThreshold: {{ properties["ilbUnhealthyThreshold"] }}
- name: {{ properties["resourceNamePrefix"] }}-ftdv-fr-ilb
  type: compute.v1.forwardingRule
  properties:
    region: {{ properties["region"] }}
    allPorts: true
    loadBalancingScheme: INTERNAL
    IPAddress: $(ref.{{ properties["resourceNamePrefix"] }}-ftdv-ilb-ip.selfLink)
    backendService: $(ref.{{ properties["resourceNamePrefix"] }}-ftdv-backend-service-ilb.selfLink)
    network: projects/{{ env["project"] }}/global/networks/{{ properties["insideVpcName"] }}
    subnetwork: projects/{{ env["project"] }}/regions/{{ properties["region"] }}/subnetworks/{{ properties["insideSubnetworkName"] }}
- name: {{ properties["resourceNamePrefix"] }}-ftdv-ilb-ip
  type: compute.v1.address
  properties:
    addressType: INTERNAL
    region: {{ properties["region"] }}
    subnetwork: projects/{{ env["project"] }}/regions/{{ properties["region"] }}/subnetworks/{{ properties["insideSubnetworkName"] }}
# Cloud NAT
- name: {{ properties["resourceNamePrefix"] }}-nat-router
  type: gcp-types/compute-v1:routers
  properties:
    network: projects/{{ env["project"] }}/global/networks/{{ properties["outsideVpcName"] }}
    region: {{ properties["region"] }}
    nats:
    - name: {{ properties["resourceNamePrefix"] }}-nat
      sourceSubnetworkIpRangesToNat: ALL_SUBNETWORKS_ALL_IP_RANGES
      natIpAllocateOption: AUTO_ONLY