#  Copyright (c) 2020 Cisco Systems Inc or its affiliates.
#
#  All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: >-
  Deploys AutoScale solution for Cisco NGFWv instances
Parameters:
  AutoscaleGrpNamePrefix:
    Description: >-
      This will be AutoScale Group Name prefix with suffix as Pod Number
    Type: String
    MaxLength: 18
    Default: NGFWv-AutoScale
  PodNumber:
    Description: >-
      This will be suffixed to AutoScale Group(NGFWv-Group-Name), if this value is 1 then, group name will be
      NGFWv-Group-Name-1, It should be at least 1 numerical digit but not more than 3 digits.
    Type: String
    Default: 1
    AllowedPattern: '^\d{1,3}$'
    ConstraintDescription: must be a numerical string matching '^\d{1,3}$'
  NotifyEmailID:
    Description: >-
      Email address to which AutoScale Events Email needs to be sent.
    Type: String
  VpcId:
    Description: >-
      Select vpc for AutoScale group
    Type: AWS::EC2::VPC::Id
  LambdaSubnets:
    Description: >-
      Please provide at least 2 subnet for Lambda functions. Note that these 2 subnet should have NAT GW,
      because Lambda functions should communicate with AWS Services which are public DNS.
      Order in which, you select subnet does't matter. Reference https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html
    Type: List<AWS::EC2::Subnet::Id>
  LambdaSG:
    Description: >-
      Provide Security Groups for Lambda functions, Keep outbound connections to ANYWHERE.
    Type: List<AWS::EC2::SecurityGroup::Id>
  NoOfAZs:
    Description: >-
      Total Number of Availability Zones into which NGFWv will be deployed (Min 1 and Max 3 depends on Region).
    Type: Number
    AllowedValues:
      - 1
      - 2
      - 3
    Default: 2
  ListOfAzs:
    Type: CommaDelimitedList
    Description: >-
      Enter the list of Availability Zones (Based on Number of Availability Zones above).
  S3BktName:
    Description: The S3 Bucket name for lambda function
    Type: String
    AllowedPattern: '(?=^.{3,63}$)(?!^(\d+\.)+\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)'
    ConstraintDescription: must be a valid S3 bucket name
  TgHealthPort:
    Description: >-
      Note By default this port shouldn't be used for traffic, because
      any request coming to NGFWv having destination port as this will be routed to AWS Metadata server.
      If you want your application itself to reply for health probes then accordingly NAT rules can be changed for NGFWv.
      In such case if application doesn't respond then FTDv will be marked as
      unhealthy and gets deleted due to Unhealthy instance threshold alarm.
    Type: String
    AllowedPattern: '^()([1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])$'
    ConstraintDescription: must be a valid TCP port
    Default: 22
  AssignPublicIP:
    Description: >-
      Please select true if  needs to have public IP address. In case NGFWv needs to have public IP then management
      subnet should have AWS IGW as route to internet.
    Type: String
    AllowedValues:
      - true
      - false
    Default: true    
  MgmtInterfaceSG:
    Description: >-
      Please select security group ID for NGFWv instances
    Type: List<AWS::EC2::SecurityGroup::Id>
  MgmtSubnetId:
    Description: >-
      Select only one subnet per AZ. If multiple subnet from same AZ are chosen, wrong Subnet selection will cause problems while deploying the NGFWv instances.
      Make sure of adding Subnet from AZ provided.
    Type: List<AWS::EC2::Subnet::Id>
  InsideInterfaceSG:
    Description: >-
      Please select security group ID for NGFWv instances inside interface
    Type: AWS::EC2::SecurityGroup::Id
  InsideSubnetId:
    Description: >-
      Select only one subnet per AZ. If multiple subnet from same AZ are chosen,
      wrong Subnet selection will cause problems while deploying the NGFWv instances.
      Make sure of adding Subnet from AZ provided.
    Type: List<AWS::EC2::Subnet::Id>
  OutsideInterfaceSG:
    Description: >-
      Please select security group ID for NGFWv instances outside interface
    Type: AWS::EC2::SecurityGroup::Id
  OutsideSubnetId:
    Description: >-
      Select only one subnet per AZ. If multiple subnet from same AZ are chosen, Creation of LB will fail.
      Wrong Subnet selection will cause problems while deploying the NGFWv instances.
      Make sure of adding Subnet from AZ provided.
    Type: List<AWS::EC2::Subnet::Id>
  InstanceType:
    Description: Cisco NGFWv EC2 instance type
    Type: String
    AllowedValues:
      - c3.xlarge
      - c4.xlarge
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
    Default: c4.xlarge
  LicenseType:
    Description: >-
      Choose Cisco NGFWv EC2 instance license type, make sure AMI ID which will be entered below is of same licensing type.
    Type: String
    AllowedValues:
      - BYOL
      - PAYG
    Default: BYOL
  AmiID:
    Description: >-
      Please choose correct AMI ID as per the region, desired version and license type(BYOL/PAYG).
      NGFWv version 6.4 onwards releases are supported.
    Type: AWS::EC2::Image::Id
    Default: ami-024bed1e4455e3f0d
  KmsArn:
    Description: >-
      [Conditional] ARN of an existing KMS (AWS KMS key to encrypt at rest), If specified, NGFWv 'admin' Password below should be encrypted
      Password. The Password encryption should be done only using the specified ARN.
      Generating Encrypted Password Ex: " aws kms encrypt --key-id <KMS ARN> --plaintext <password> ", Please use such generated password in below fields.
    Type: String
  ngfwPassword:
    Description: >-
      All NGFWv instances come up with default password, which is in Userdata field of Launch Template(Autoscale Group).
      Password will be changed to given(below) password once NGFWv is accessible.
      Since this can be a plain text password or KMS encrypted password, minimum length should be 8 characters.
    NoEcho: true
    MinLength: 8
    Type: String
    ConstraintDescription: password must be of minimum 8 characters
  fmcServer:
    Description: This IP can be external IP or IP reachable in NGFWv mgmt subnet in the VPC
    Type: String
    MinLength: 7
    MaxLength: 15
    AllowedPattern: '^(?:(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(\.(?!$)|$)){4}$'
    ConstraintDescription: must be a valid IP address
  fmcOperationsUsername:
    Description: >-
      Unique Internal user for AutoScale Manager automation tasks on FMC,
        User should have roles system provided 'Network Admin' and 'Maintenance User' or more.
        Refer 'Firepower Management Center Configuration Guide'
    Type: String
  fmcOperationsPassword:
    Description: >-
      Please make sure you type correct password (Wrong password will result in failure in automation).
      If KMS ARN is specified above, please provide encrypted password.
    NoEcho: true
    Type: String
  fmcDeviceGrpName:
    Description: >-
      Please make sure correct Device Group Name in FMC is provided
    Type: String
  fmcPublishMetrics:
    Description: >-
      Please select true if you would like to create a Lambda Function to poll FMC,
      and publish a specific Device Group Metrics to AWS CloudWatch.
    Type: String
    AllowedValues:
      - true
      - false
    Default: true
  fmcMetricsUsername:
    Description: >-
      Unique Internal user for Polling Metrics from FMC,
        User should have roles system provided 'Network Admin' and 'Maintenance User' or more.
        Refer 'Firepower Management Center Configuration Guide'
    Type: String
  fmcMetricsPassword:
    Description: >-
      Please make sure you type correct password (Wrong password will result in failure of Metrics collection).
      If KMS ARN is specified above, please provide encrypted password.
    NoEcho: true
    Type: String
  CpuThresholds:
    Description: >-
      [Optional] Specifying non-zero lower and upper threshold will create respective Scale policies.
      If 0,0 is selected, no cpu scaling alarm or policies will be created.
      Evaluation points & Data points are kept default/recommended values
    Type: CommaDelimitedList
    Default: 10,70
    AllowedValues:
      - 0,0
      - 0,90
      - 0,80
      - 0,70
      - 0,60
      - 0,50
      - 0,40
      - 0,30
      - 0,20
      - 0,10
      - 5,90
      - 5,70
      - 5,50
      - 5,30
      - 5,15
      - 10,90
      - 10,80
      - 10,70
      - 10,60
      - 10,50
      - 10,40
      - 10,30
      - 10,20
      - 10,0
      - 20,90
      - 20,80
      - 20,70
      - 20,60
      - 20,50
      - 20,30
      - 20,0
      - 30,90
      - 30,80
      - 30,70
      - 30,60
      - 30,50
      - 30,40
      - 30,0
      - 40,90
      - 40,80
      - 40,70
      - 40,60
      - 40,50
      - 40,0
      - 50,90
      - 50,80
      - 50,70
      - 50,60
      - 50,0
      - 60,90
      - 60,80
      - 60,70
      - 60,0
      - 70,90
      - 70,80
      - 70,0
      - 80,95
      - 80,90
      - 80,0
      - 90,95
      - 90,0
  MemoryThresholds:
    Description: >-
      [Optional] Specifying non-zero lower and upper threshold will create respective Scale policies.
      If 0,0 is selected, no memory scaling alarm or policies will be created. Note, if Metric publish Lambda is not
      created then this input will be ignored irrespective of chosen values.
    Type: CommaDelimitedList
    Default: 40,70
    AllowedValues:
      - 0,0
      - 0,90
      - 0,80
      - 0,70
      - 0,60
      - 0,50
      - 0,40
      - 0,30
      - 0,20
      - 0,10
      - 5,90
      - 5,70
      - 5,50
      - 5,30
      - 5,15
      - 10,90
      - 10,80
      - 10,70
      - 10,60
      - 10,50
      - 10,40
      - 10,30
      - 10,20
      - 10,0
      - 20,90
      - 20,80
      - 20,70
      - 20,60
      - 20,50
      - 20,30
      - 20,0
      - 30,90
      - 30,80
      - 30,70
      - 30,60
      - 30,50
      - 30,40
      - 30,0
      - 40,90
      - 40,80
      - 40,70
      - 40,60
      - 40,50
      - 40,0
      - 50,90
      - 50,80
      - 50,70
      - 50,60
      - 50,0
      - 60,90
      - 60,80
      - 60,70
      - 60,0
      - 70,90
      - 70,80
      - 70,0
      - 80,95
      - 80,90
      - 80,0
      - 90,95
      - 90,0
Conditions:
  support1zone: !Equals
    - !Ref NoOfAZs
    - 1
  support2zone: !Equals
    - !Ref NoOfAZs
    - 2
  support3zone: !Equals
    - !Ref NoOfAZs
    - 3
  UserNotifyEmail: !Not
    - !Equals
      - ''
      - !Ref NotifyEmailID
  ShouldEncrypt: !Not
    - !Equals
      - ''
      - !Ref KmsArn
  PublishMetrics: !Equals
    - !Ref fmcPublishMetrics
    - true
  DoCpuUpPolcy: !Not
    - !Equals
      - 0
      - !Select ['1', !Ref CpuThresholds ]
  DoCpuLowPolcy: !Not
    - !Equals
      - 0
      - !Select ['0', !Ref CpuThresholds ]
  DoMemUpPolcy: !And
    - !Condition PublishMetrics
    - !Not
      - !Equals
        - 0
        - !Select ['1', !Ref MemoryThresholds ]
  DoMemLowPolcy: !And
    - !Condition PublishMetrics
    - !Not
      - !Equals
        - 0
        - !Select ['0', !Ref MemoryThresholds ]
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Pod Configuration
        Parameters:
          - AutoscaleGrpNamePrefix
          - PodNumber
          - NotifyEmailID
      - Label:
          default: Infrastructure Details
        Parameters:
          - VpcId
          - S3BktName
          - LambdaSubnets
          - LambdaSG
          - NoOfAZs
          - ListOfAzs
          - MgmtSubnetId
          - InsideSubnetId
          - OutsideSubnetId
      - Label:
          default: GWLB Configuration
        Parameters:
          - TgHealthPort
      - Label:
          default: Cisco NGFWv Instance Configuration
        Parameters:
          - InstanceType
          - LicenseType
          - AssignPublicIP
          - MgmtInterfaceSG
          - InsideInterfaceSG
          - OutsideInterfaceSG
          - AmiID
          - KmsArn
          - ngfwPassword
      - Label:
          default: FMC Automation Configuration
        Parameters:
          - fmcServer
          - fmcOperationsUsername
          - fmcOperationsPassword
          - fmcDeviceGrpName
      - Label:
          default: FMC Device Group Metrics Publish Configuration
        Parameters:
          - fmcPublishMetrics
          - fmcMetricsUsername
          - fmcMetricsPassword
      - Label:
          default: Scaling Configuration
        Parameters:
          - CpuThresholds
          - MemoryThresholds
    ParameterLabels:
      AutoscaleGrpNamePrefix:
        default: Autoscale Group Name Prefix
      NotifyEmailID:
        default: Autoscale Email Notification
      PodNumber:
        default: Pod Number
      VpcId:
        default: VPC ID
      LambdaSubnets:
        default: Subnets for Lambda Functions
      LambdaSG:
        default: Security Groups for Lambda Functions
      NoOfAZs:
        default: Number of Availibility Zones
      ListOfAzs:
        default: Availability Zones
      S3BktName:
        default: S3 Bucket Name
      TgHealthPort:
        default: Enter a port for NGFWv instance health check
      InstanceType:
        default: NGFWv Instance type
      LicenseType:
        default: NGFWv Instance License type
      AmiID:
        default: NGFWv AMI-ID
      AssignPublicIP:
        default: Assign Public IP for NGFWv from AWS IP Pool
      MgmtInterfaceSG:
        default: Security Groups for NGFWv Instance
      MgmtSubnetId:
        default: Subnets List for NGFWv Management Interface
      InsideInterfaceSG:
        default: Security Group for NGFWv Instance inside
      InsideSubnetId:
        default: Subnets List for NGFWv Inside Interface
      OutsideInterfaceSG:
        default: Security Group for NGFWv Instance outside
      OutsideSubnetId:
        default: Subnets List for NGFWv Outside Interface
      KmsArn:
        default: KMS Master Key ARN
      ngfwPassword:
        default: NGFWv Password
      fmcServer:
        default: FMC host IP address
      fmcOperationsUsername:
        default: FMC Username for AutoScale Automation
      fmcOperationsPassword:
        default: FMC Password for AutoScale Automation
      fmcDeviceGrpName:
        default: FMC Device Group Name
      fmcPublishMetrics:
        default: Publish Custom Metrics from FMC
      fmcMetricsUsername:
        default: FMC Username for Publishing Metrics to CloudWatch
      fmcMetricsPassword:
        default: FMC Password for Publishing Metrics to CloudWatch
      CpuThresholds:
        default: Lower,Upper CPU Thresholds
      MemoryThresholds:
        default: Lower,Upper Memory Thresholds
Resources:
# Lambda Layer ---------------------------------------------------------
  LambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.9
      Content:
        S3Bucket: !Ref S3BktName
        S3Key: autoscale_layer.zip
      Description: Lambda Layer for Cisco NGFWv AutoScale Solution
      LayerName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'lambda-layer' ] ]
# ------------------------------------------------------------------------
# Lambda Role & Policy
# ------------------------------------------------------------------------
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'Role' ] ]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
  LambdaPolicy:
    DependsOn:
      - LambdaRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'Policy' ] ]
      Roles:
        - !Ref LambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - logs:*
              - ec2:*
              - elasticloadbalancing:*
              - autoscaling:*
              - events:*
              - s3:*
              - cloudwatch:*
              - cloudwatch:SetAlarmState
              - cloudwatch:PutMetricData
              - sns:*
              - ssm:*
              - lambda:*
              - kms:Decrypt
            Effect: Allow
            Resource: '*'
# ------------------------------------------------------------------------
# User Notification SNS
# ------------------------------------------------------------------------
  UserNotifyTopic:
    Condition: UserNotifyEmail
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'UserNotifyTopic']]
  UserNotifyTopicSubscription:
    Condition: UserNotifyEmail
    DependsOn: UserNotifyTopic
    DeletionPolicy: Delete
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref NotifyEmailID
      Protocol: email
      TopicArn: !Ref UserNotifyTopic
# ------------------------------------------------------------------------
# Load Balancer & Target groups
# ------------------------------------------------------------------------
  lbOutside:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'gwlb' ] ]
      Type: gateway
      LoadBalancerAttributes: 
        - Key: load_balancing.cross_zone.enabled
          Value: true
      Subnets: !If
        - support1zone
        - !Split
          - ':'
          - !Select ['0', !Ref OutsideSubnetId ]
        - !If
          - support2zone
          - !Split
            - ':'
            - !Join [':', [ !Select ['0', !Ref OutsideSubnetId ], !Select ['1', !Ref OutsideSubnetId ] ] ]
          - !Split
            - ':'
            - !Join [':',[ !Select ['0', !Ref OutsideSubnetId ], !Select ['1', !Ref OutsideSubnetId ], !Select ['2', !Ref OutsideSubnetId ] ] ]
  UnSectg0:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn:
      - lbOutside
    Properties:
      Name: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'lb-UnSec-tg0' ] ]
      Port: 6081
      Protocol: GENEVE
      HealthCheckPort: !Ref TgHealthPort
      HealthCheckIntervalSeconds: 15
      HealthCheckProtocol: TCP
      VpcId: !Ref VpcId
      TargetType: ip

  UnSeclistener0:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref UnSectg0
      LoadBalancerArn: !Ref lbOutside

# ------------------------------------------------------------------------
# AutoScale Manager Lambda
# ------------------------------------------------------------------------
  AutoscaleManager:
   Type: AWS::Serverless::Function
   DeletionPolicy: Delete
   Properties:
     FunctionName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'manager-lambda'] ]
     Handler: manager.lambda_handler
     Runtime: python3.9
     ReservedConcurrentExecutions: 1
     CodeUri:
       Bucket: !Ref S3BktName
       Key: autoscale_manager.zip
     Description: 'AutoscaleManager Lambda is responsible to configure NGFWv'
     MemorySize: 128
     Timeout: 900
     VpcConfig:
       SecurityGroupIds: !Ref LambdaSG
       SubnetIds: !Ref LambdaSubnets
     KmsKeyArn: !Ref KmsArn
     Environment:
       Variables:
         DEBUG_LOGS: 'enable'
         GENEVE_SUPPORT: 'enable'
         KMS_ENC: !If
           - ShouldEncrypt
           - !Ref KmsArn
           - !Ref 'AWS::NoValue'
         ASG_NAME: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber ] ]
         FMC_DEVICE_GRP: !Ref fmcDeviceGrpName
         FMC_SERVER: !Ref fmcServer
         FMC_USERNAME: !Ref fmcOperationsUsername
         FMC_PASSWORD: !Ref fmcOperationsPassword
         NO_OF_AZs: !Ref NoOfAZs
         FTD_LICENSE_TYPE: !Ref LicenseType
         LB_ARN_OUTSIDE: !Ref lbOutside
         FTD_PASSWORD: !Ref ngfwPassword
         TG_HEALTH_PORT: !Ref TgHealthPort
         AS_MANAGER_TOPIC: !Ref ASmanagerTopic
         USER_NOTIFY_TOPIC_ARN: !If
           - UserNotifyEmail
           - !Ref UserNotifyTopic
           - !Ref 'AWS::NoValue'
         A_CRON_JOB_NAME: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'health-doc-cron' ] ]
     Role: !GetAtt LambdaRole.Arn
     Layers:
       - !Ref LambdaLayer
     Events:
       SNS1:
         Type: SNS
         Properties:
           Topic:
             Ref: ASmanagerTopic
  AutoscaleManagerLogGrp:
   DependsOn: AutoscaleManager
   Type: AWS::Logs::LogGroup
   DeletionPolicy: Delete
   Properties:
     LogGroupName: !Join ['/', ['/aws/lambda', !Ref AutoscaleManager]]
  InstanceEvent:
   Type: AWS::Events::Rule
   Properties:
     Name: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'notify-instance-event'] ]
     EventPattern:
       source:
         - aws.autoscaling
       detail-type:
         - EC2 Instance Launch Successful
         - EC2 Instance Terminate Successful
       detail:
         AutoScalingGroupName:
           - !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber ] ]
     Targets:
       - Id: CloudWatchEventTarget
         Arn: !GetAtt AutoscaleManager.Arn
     State: ENABLED
  InstanceEventInvokeLambdaPermission:
   Type: AWS::Lambda::Permission
   DependsOn: InstanceEvent
   Properties:
     FunctionName: !Ref AutoscaleManager
     Action: 'lambda:InvokeFunction'
     Principal: events.amazonaws.com
     SourceArn: !GetAtt InstanceEvent.Arn
  ASmanagerTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber , 'autoscale-manager-topic'] ]
  HealthDoctorCron1:
    Type: AWS::Events::Rule
    Properties:
      Name: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'health-doc-cron' ] ]
      ScheduleExpression: !Sub
        - rate(${Time} minutes)
        - Time: 60
      Targets:
        - Id: CloudWatchEventTarget
          Arn: !GetAtt AutoscaleManager.Arn
      State: ENABLED
  HealthDoctorCron1InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    DependsOn: HealthDoctorCron1
    Properties:
      FunctionName: !Ref AutoscaleManager
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt HealthDoctorCron1.Arn
# ------------------------------------------------------------------------
# Lifecycle Action Lambda
# ------------------------------------------------------------------------
  LifeCycleLambda:
    Type: AWS::Serverless::Function
    DependsOn:
      - LambdaRole
      - LambdaPolicy
      - ASmanagerTopic
    DeletionPolicy: Delete
    Properties:
      FunctionName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'lifecycle-lambda'] ]
      Handler: lifecycle_ftdv.lambda_handler
      Runtime: python3.9
      CodeUri:
        Bucket: !Ref S3BktName
        Key: lifecycle_ftdv.zip
      Description: 'Life Cycle Lambda is responsible to attach interfaces to new NGFWv'
      MemorySize: 128
      ReservedConcurrentExecutions: 10
      Timeout: 300
      Role: !GetAtt LambdaRole.Arn
      VpcConfig:
        SecurityGroupIds: !Ref LambdaSG
        SubnetIds: !Ref LambdaSubnets
      Layers:
        - !Ref LambdaLayer
      Environment:
        Variables:
          DEBUG_LOGS: 'enable'
          GENEVE_SUPPORT: 'enable'
          ASG_NAME: !Join [ '-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber]]
          FMC_DEVICE_GRP: !Ref fmcDeviceGrpName
          NO_OF_AZs: !Ref NoOfAZs
          FTD_LICENSE_TYPE: !Ref LicenseType
          INSIDE_SUBNET: !If
            - support1zone
            - !Select ['0', !Ref InsideSubnetId ]
            - !If
              - support2zone
              - !Join ['::', [ !Select ['0', !Ref InsideSubnetId ], !Select ['1', !Ref InsideSubnetId ] ] ]
              - !Join ['::', [ !Select ['0', !Ref InsideSubnetId ], !Select ['1', !Ref InsideSubnetId ], !Select ['2', !Ref InsideSubnetId ] ] ]
          SECURITY_GRP_2: !Ref InsideInterfaceSG
          OUTSIDE_SUBNET: !If
            - support1zone
            - !Select ['0', !Ref OutsideSubnetId ]
            - !If
              - support2zone
              - !Join ['::', [ !Select ['0', !Ref OutsideSubnetId ], !Select ['1', !Ref OutsideSubnetId ] ] ]
              - !Join ['::', [ !Select ['0', !Ref OutsideSubnetId ], !Select ['1', !Ref OutsideSubnetId ], !Select ['2', !Ref OutsideSubnetId ] ] ]
          SECURITY_GRP_3: !Ref OutsideInterfaceSG
          LB_ARN_OUTSIDE: !Ref lbOutside
          LB_DEREGISTRATION_DELAY: 180
          CONFIGURE_ASAV_TOPIC_ARN: !Ref ASmanagerTopic
          USER_NOTIFY_TOPIC_ARN: !If
            - UserNotifyEmail
            - !Ref UserNotifyTopic
            - !Ref 'AWS::NoValue'
  LifeCycleLambdaLogGrp:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Join ['/', ['/aws/lambda', !Ref LifeCycleLambda]]
  LifeCycleEvent:
    Type: AWS::Events::Rule
    Properties:
      Name: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'lifecycle-action' ] ]
      EventPattern:
        source:
          - aws.autoscaling
        detail-type:
          - EC2 Instance-launch Lifecycle Action
          - EC2 Instance-terminate Lifecycle Action
        detail:
          AutoScalingGroupName:
            - !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber ] ]
      Targets:
        - Id: CloudWatchEventTarget
          Arn: !GetAtt LifeCycleLambda.Arn
      State: ENABLED
  LifeCycleEventInvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    DependsOn: LifeCycleEvent
    Properties:
      FunctionName: !Ref LifeCycleLambda
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt LifeCycleEvent.Arn
# ------------------------------------------------------------------------
# Custom Metric Publishing
# ------------------------------------------------------------------------
  CustomMetricsPublisher:
    Type: AWS::Serverless::Function
    Condition: PublishMetrics
    DependsOn:
      - LambdaRole
      - LambdaPolicy
    DeletionPolicy: Delete
    Properties:
      FunctionName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'publish-custom-metrics'] ]
      Handler: custom_metric_fmc.lambda_handler
      Runtime: python3.9
      CodeUri:
        Bucket: !Ref S3BktName
        Key: custom_metric_fmc.zip
      Description: 'Custom Metric Publisher Lambda is responsible to periodically publish metrics to CloudWatch'
      MemorySize: 128
      ReservedConcurrentExecutions: 10
      Timeout: 300
      Role: !GetAtt LambdaRole.Arn
      VpcConfig:
        SecurityGroupIds: !Ref LambdaSG
        SubnetIds: !Ref LambdaSubnets
      KmsKeyArn: !Ref KmsArn
      Layers:
        - !Ref LambdaLayer
      Environment:
        Variables:
         DEBUG_LOGS: 'enable'
         GENEVE_SUPPORT: 'enable'
         KMS_ENC: !If
           - ShouldEncrypt
           - !Ref KmsArn
           - !Ref 'AWS::NoValue'
         ASG_NAME: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber ] ]
         FMC_DEVICE_GRP: !Ref fmcDeviceGrpName
         FMC_SERVER: !Ref fmcServer
         FMC_MET_USERNAME: !Ref fmcMetricsUsername
         FMC_MET_PASSWORD: !Ref fmcMetricsPassword
         CRON_JOB_NAME: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'metric-pub-cron' ] ]
  CustomMetricsPublisherLogGrp:
    Condition: PublishMetrics
    DependsOn: CustomMetricsPublisher
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Join ['/', ['/aws/lambda', !Ref CustomMetricsPublisher]]
  CloudWatchCron1:
    Condition: PublishMetrics
    Type: AWS::Events::Rule
    Properties:
      Name: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'metric-pub-cron' ] ]
      #ScheduleExpression: !Join ['rate','(',[!Ref Rate],' minutes)'  ]    ]
      #ScheduleExpression: !Ref Rate
      ScheduleExpression: !Sub
        - rate(${Time} minutes)
        - Time: 2
      Targets:
        - Id: CloudWatchEventTarget
          Arn: !GetAtt CustomMetricsPublisher.Arn
      State: ENABLED
  CloudWatchCron1InvokeLambdaPermission:
    Condition: PublishMetrics
    Type: AWS::Lambda::Permission
    DependsOn: CloudWatchCron1
    Properties:
      FunctionName: !Ref CustomMetricsPublisher
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt CloudWatchCron1.Arn
  InstanceLaunchEvent:
    Condition: PublishMetrics
    Type: AWS::Events::Rule
    Properties:
      Name: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'notify-vmlaunch-publisher'] ]
      EventPattern:
        source:
         - aws.autoscaling
        detail-type:
         - EC2 Instance Launch Successful
        detail:
         AutoScalingGroupName:
           - !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber ] ]
      Targets:
       - Id: CloudWatchEventTarget
         Arn: !GetAtt CustomMetricsPublisher.Arn
      State: ENABLED
  InstanceLaunchEventInvkPerm:
    Condition: PublishMetrics
    Type: AWS::Lambda::Permission
    DependsOn: InstanceLaunchEvent
    Properties:
      FunctionName: !Ref CustomMetricsPublisher
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt InstanceLaunchEvent.Arn
# ------------------------------------------------------------------------
# AWS provided Dynamic Scaling
# ------------------------------------------------------------------------
  ScaleOutCPUpolicy:
    Condition: DoCpuUpPolcy
    DependsOn:
      - FTDvGroup
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref FTDvGroup
      PolicyType: SimpleScaling
      ScalingAdjustment: 1
  ScaleInCPUpolicy:
    Condition: DoCpuLowPolcy
    DependsOn:
      - FTDvGroup
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref FTDvGroup
      PolicyType: SimpleScaling
      ScalingAdjustment: -1
  ScaleOutMempolicy:
    Condition: DoMemUpPolcy
    DependsOn:
      - FTDvGroup
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref FTDvGroup
      PolicyType: SimpleScaling
      ScalingAdjustment: 1
  ScaleInMempolicy:
    Condition: DoMemLowPolcy
    DependsOn:
      - FTDvGroup
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref FTDvGroup
      PolicyType: SimpleScaling
      ScalingAdjustment: -1
# ------------------------------------------------------------------------
# Scaling Alarm & Notification
# ------------------------------------------------------------------------
  CPUUpperboundAlarm1:
    Condition: DoCpuUpPolcy
    DependsOn:
      - FTDvGroup
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join ['', [!Ref AutoscaleGrpNamePrefix, '-',!Ref PodNumber, 'Cpu-up-threshold' ] ]
      ActionsEnabled: true
      Namespace: AWS/EC2
      AlarmActions:
        - !Ref ScaleOutCPUpolicy
      AlarmDescription: Alarm when CPU usage hits upper threshold
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 5
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref FTDvGroup
      EvaluationPeriods: 5
      MetricName: CPUUtilization
      Threshold: !Select ['1', !Ref CpuThresholds ]
      Period: 60
      Statistic: Average
      Unit: Percent
      TreatMissingData: notBreaching
  CPULowerboundAlarm1:
    Condition: DoCpuLowPolcy
    DependsOn:
      - FTDvGroup
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join ['', [!Ref AutoscaleGrpNamePrefix, '-',!Ref PodNumber, 'Cpu-low-threshold' ] ]
      ActionsEnabled: true
      Namespace: AWS/EC2
      AlarmActions:
        - !Ref ScaleInCPUpolicy
      AlarmDescription: Alarm when CPU usage hits lower threshold
      ComparisonOperator: LessThanThreshold
      DatapointsToAlarm: 10
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref FTDvGroup
      EvaluationPeriods: 10
      MetricName: CPUUtilization
      Threshold: !Select ['0', !Ref CpuThresholds ]
      Period: 60
      Statistic: Average
      Unit: Percent
      TreatMissingData: notBreaching
  MemoryUpperboundAlarm1:
    Condition: DoMemUpPolcy
    DependsOn:
      - FTDvGroup
      - CustomMetricsPublisher
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join ['', [!Ref AutoscaleGrpNamePrefix, '-',!Ref PodNumber, 'Memory-up-threshold' ] ]
      ActionsEnabled: true
      Namespace: Cisco-NGFWv-AutoScale-Group
      AlarmActions:
        - !Ref ScaleOutMempolicy
      AlarmDescription: Alarm when Memory usage hits upper threshold
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 4
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref FTDvGroup
        - Name: fmcDeviceGroupName
          Value: !Ref fmcDeviceGrpName
      EvaluationPeriods: 4
      MetricName: GroupAvgMem
      Threshold: !Select ['1', !Ref MemoryThresholds ]
      Period: 120
      Statistic: Average
      Unit: Percent
      TreatMissingData: notBreaching
  MemoryLowerboundAlarm1:
    Condition: DoMemLowPolcy
    DependsOn:
      - FTDvGroup
      - CustomMetricsPublisher
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join ['', [!Ref AutoscaleGrpNamePrefix, '-',!Ref PodNumber, 'Memory-low-threshold' ] ]
      ActionsEnabled: true
      Namespace: Cisco-NGFWv-AutoScale-Group
      AlarmActions:
        - !Ref ScaleInMempolicy
      AlarmDescription: Alarm when Memory usage hits lower threshold
      ComparisonOperator: LessThanThreshold
      DatapointsToAlarm: 5
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref FTDvGroup
        - Name: fmcDeviceGroupName
          Value: !Ref fmcDeviceGrpName
      EvaluationPeriods: 5
      MetricName: GroupAvgMem
      Threshold: !Select ['0', !Ref MemoryThresholds ]
      Period: 120
      Statistic: Average
      Unit: Percent
      TreatMissingData: notBreaching
# ------------------------------------------------------------------------
# AutoScale Group & Launch Template
# ------------------------------------------------------------------------
  FTDvGroup:
    DependsOn:
      - LifeCycleEvent
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber ] ]
      VPCZoneIdentifier: !If
        - support1zone
        - !Split
          - ':'
          - !Select ['0', !Ref MgmtSubnetId ]
        - !If
          - support2zone
          - !Split
            - ':'
            - !Join [':', [ !Select ['0', !Ref MgmtSubnetId ], !Select ['1', !Ref MgmtSubnetId ] ] ]
          - !Split
            - ':'
            - !Join [':', [ !Select ['0', !Ref MgmtSubnetId ], !Select ['1', !Ref MgmtSubnetId ], !Select ['2', !Ref MgmtSubnetId ] ] ]
      LaunchTemplate:
        LaunchTemplateId: !Ref FTDvLaunchTemplate
        Version: 1
      MinSize: 0
      MaxSize: 2
      MetricsCollection:
        - Granularity: 1Minute
          Metrics:
            - GroupDesiredCapacity
            - GroupInServiceInstances
            - GroupTerminatingInstances
            - GroupTotalInstances
            - GroupStandbyInstances
      HealthCheckGracePeriod: 1320
      Cooldown: 1320
      TerminationPolicies:
        - OldestLaunchConfiguration
        - OldestLaunchTemplate
        - ClosestToNextInstanceHour
      LifecycleHookSpecificationList:
        - DefaultResult: ABANDON
          HeartbeatTimeout: 60
          LifecycleHookName: Launch_LifecycleHook
          LifecycleTransition: 'autoscaling:EC2_INSTANCE_LAUNCHING'
        - DefaultResult: CONTINUE
          HeartbeatTimeout: 120
          LifecycleHookName: Terminate_LifecycleHook
          LifecycleTransition: 'autoscaling:EC2_INSTANCE_TERMINATING'
  FTDvLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Join ['-', [!Ref AutoscaleGrpNamePrefix, !Ref PodNumber, 'ftd-launch-template' ] ]
      LaunchTemplateData:
        EbsOptimized: false
        ImageId: !Ref AmiID
        InstanceType: !Ref InstanceType
        NetworkInterfaces:
          - AssociatePublicIpAddress: !Ref AssignPublicIP
            DeleteOnTermination: true
            DeviceIndex: 0
            Groups: !Ref MgmtInterfaceSG
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
        Monitoring:
          Enabled: true
        UserData:
          Fn::Base64: !Sub |
            { "AdminPassword": "FtDv_AuT0Scale"}
